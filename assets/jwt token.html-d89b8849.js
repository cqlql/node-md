import{_ as n,Z as s,$ as a,a2 as e}from"./framework-d33190a3.js";const t={},p=e(`<h2 id="不需要在服务的存储" tabindex="-1"><a class="header-anchor" href="#不需要在服务的存储" aria-hidden="true">#</a> 不需要在服务的存储</h2><h2 id="需要安装的包" tabindex="-1"><a class="header-anchor" href="#需要安装的包" aria-hidden="true">#</a> 需要安装的包</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>dotnet <span class="token function">add</span> package Microsoft.IdentityModel.Tokens
dotnet <span class="token function">add</span> package System.IdentityModel.Tokens.Jwt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="生成-jwt" tabindex="-1"><a class="header-anchor" href="#生成-jwt" aria-hidden="true">#</a> 生成 JWT</h2><p>注意 &quot;your_secret_key_here&quot; 不能太短，否则报错</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IdentityModel<span class="token punctuation">.</span>Tokens<span class="token punctuation">.</span>Jwt</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>IdentityModel<span class="token punctuation">.</span>Tokens</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> secretKey <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SymmetricSecurityKey</span><span class="token punctuation">(</span>Encoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span><span class="token string">&quot;your_secret_key_here..your_secret_key_here&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">var</span></span> signingCredentials <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">SigningCredentials</span><span class="token punctuation">(</span>secretKey<span class="token punctuation">,</span> SecurityAlgorithms<span class="token punctuation">.</span>HmacSha256<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> claims <span class="token operator">=</span> <span class="token keyword">new</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">{</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;user_id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Claim</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;john_doe&quot;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> token <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JwtSecurityToken</span><span class="token punctuation">(</span>
    <span class="token named-parameter punctuation">issuer</span><span class="token punctuation">:</span> <span class="token string">&quot;your_issuer_here&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">audience</span><span class="token punctuation">:</span> <span class="token string">&quot;your_audience_here&quot;</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">claims</span><span class="token punctuation">:</span> claims<span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">expires</span><span class="token punctuation">:</span> DateTime<span class="token punctuation">.</span>UtcNow<span class="token punctuation">.</span><span class="token function">AddHours</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token named-parameter punctuation">signingCredentials</span><span class="token punctuation">:</span> signingCredentials
<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> jwtToken <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">JwtSecurityTokenHandler</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">WriteToken</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,6),o=[p];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","jwt token.html.vue"]]);export{r as default};
