import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{a as t,e as i,o as s}from"./app-aIjv9Po9.js";const n={};function r(l,e){return s(),t("div",null,e[0]||(e[0]=[i(`<p><a href="https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90" target="_blank" rel="noopener noreferrer">官方文档很详细</a></p><h2 id="beforecreate" tabindex="-1"><a class="header-anchor" href="#beforecreate"><span>beforeCreate</span></a></h2><p>在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。</p><p>此时 data 属性还没绑定监听，也不能操作</p><h2 id="created-此时可以操作属性" tabindex="-1"><a class="header-anchor" href="#created-此时可以操作属性"><span>created 此时可以操作属性</span></a></h2><p>组件实例创建完成，属性已绑定，属性的操作会触发更新，所以此时可以操作属性了。</p><p>但不能操作DOM元素，DOM还未生成，$el属性还不存在</p><h2 id="beforemount" tabindex="-1"><a class="header-anchor" href="#beforemount"><span>beforeMount</span></a></h2><p>在挂载开始之前被调用：相关的 render 函数首次被调用。</p><h2 id="mounted-此时可以操作元素-el已存在" tabindex="-1"><a class="header-anchor" href="#mounted-此时可以操作元素-el已存在"><span>mounted 此时可以操作元素，$el已存在</span></a></h2><p>如果 root 实例挂载了一个文档内元素，当 mounted 被调用时 vm.$el 也在文档内。</p><p>注意 mounted 不会承诺所有的子组件也都一起被挂载。如果你希望等到整个视图都渲染完毕，可以用 vm.$nextTick 替换掉 mounted：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">mounted</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">  this</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">$nextTick</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">function</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> () {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // Code that will run only after the</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    // entire view has been rendered</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="beforeupdate" tabindex="-1"><a class="header-anchor" href="#beforeupdate"><span>beforeUpdate</span></a></h2><p>组件更新之前</p><h2 id="updated" tabindex="-1"><a class="header-anchor" href="#updated"><span>updated</span></a></h2><p>组件更新之后</p><h2 id="activated" tabindex="-1"><a class="header-anchor" href="#activated"><span>activated</span></a></h2><p>keep-alive, 组件被激活前</p><h2 id="deactivated" tabindex="-1"><a class="header-anchor" href="#deactivated"><span>deactivated</span></a></h2><p>keep-alive, 组件被激活后</p><h2 id="beforedestroy" tabindex="-1"><a class="header-anchor" href="#beforedestroy"><span>beforeDestroy</span></a></h2><p>实例被销毁前</p><h2 id="destroyed" tabindex="-1"><a class="header-anchor" href="#destroyed"><span>destroyed</span></a></h2><p>实例被销毁后</p>`,25)]))}const p=a(n,[["render",r],["__file","生命周期.html.vue"]]),h=JSON.parse('{"path":"/old__/06_vue/vue2/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html","title":"","lang":"zh-CN","frontmatter":{"description":"官方文档很详细 beforeCreate 在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。 此时 data 属性还没绑定监听，也不能操作 created 此时可以操作属性 组件实例创建完成，属性已绑定，属性的操作会触发更新，所以此时可以操作属性了。 但不能操作DOM元素，DOM还未生成，$...","head":[["meta",{"property":"og:url","content":"http://docs.cqlql.top/old__/06_vue/vue2/%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.html"}],["meta",{"property":"og:site_name","content":"开发笔记"}],["meta",{"property":"og:description","content":"官方文档很详细 beforeCreate 在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。 此时 data 属性还没绑定监听，也不能操作 created 此时可以操作属性 组件实例创建完成，属性已绑定，属性的操作会触发更新，所以此时可以操作属性了。 但不能操作DOM元素，DOM还未生成，$..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T02:50:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T02:50:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T02:50:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"桥黎\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"beforeCreate","slug":"beforecreate","link":"#beforecreate","children":[]},{"level":2,"title":"created 此时可以操作属性","slug":"created-此时可以操作属性","link":"#created-此时可以操作属性","children":[]},{"level":2,"title":"beforeMount","slug":"beforemount","link":"#beforemount","children":[]},{"level":2,"title":"mounted 此时可以操作元素，$el已存在","slug":"mounted-此时可以操作元素-el已存在","link":"#mounted-此时可以操作元素-el已存在","children":[]},{"level":2,"title":"beforeUpdate","slug":"beforeupdate","link":"#beforeupdate","children":[]},{"level":2,"title":"updated","slug":"updated","link":"#updated","children":[]},{"level":2,"title":"activated","slug":"activated","link":"#activated","children":[]},{"level":2,"title":"deactivated","slug":"deactivated","link":"#deactivated","children":[]},{"level":2,"title":"beforeDestroy","slug":"beforedestroy","link":"#beforedestroy","children":[]},{"level":2,"title":"destroyed","slug":"destroyed","link":"#destroyed","children":[]}],"git":{"createdTime":1652927496000,"updatedTime":1730083825000,"contributors":[{"name":"陈桥黎","email":"cql.ql@qq.com","commits":1}]},"readingTime":{"minutes":1.04,"words":312},"filePathRelative":"__old__/06_vue/vue2/生命周期.md","localizedDate":"2022年5月19日","autoDesc":true,"excerpt":"<p><a href=\\"https://cn.vuejs.org/v2/api/#%E9%80%89%E9%A1%B9-%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E9%92%A9%E5%AD%90\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档很详细</a></p>\\n<h2>beforeCreate</h2>\\n<p>在实例初始化之后，数据观测 (data observer) 和 event/watcher 事件配置之前被调用。</p>\\n<p>此时 data 属性还没绑定监听，也不能操作</p>\\n<h2>created 此时可以操作属性</h2>"}');export{p as comp,h as data};
