import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,a,f as t}from"./app.7d9cbd82.js";const e={},p=t(`<p>\u4E00\u6B3E\u53D7\u6B22\u8FCE\u7684\u9AD8\u6027\u80FD\u7684 JSON \u6846\u67B6, \u4ECE .net core \u5F00\u59CB\u9ED8\u8BA4\u96C6\u6210</p><h2 id="\u53EF\u4EE5\u4FEE\u6B63\u6620\u5C04" tabindex="-1"><a class="header-anchor" href="#\u53EF\u4EE5\u4FEE\u6B63\u6620\u5C04" aria-hidden="true">#</a> \u53EF\u4EE5\u4FEE\u6B63\u6620\u5C04</h2><p>\u5F53\u8BF7\u6C42\u5E26\u7684 json \u53C2\u6570\u5B57\u6BB5\u540D\u4E0E\u540E\u7AEF\u5B9A\u4E49\u7684\u6A21\u578B\u4E0D\u4E00\u6837\u65F6\uFF0C\u4FBF\u53EF\u901A\u8FC7 <code>JsonProperty</code> \u4FEE\u6B63</p><p>\u6A21\u578B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u767B\u5F55\u53C2\u6570</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginView</span>
<span class="token punctuation">{</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// \u8D26\u53F7</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">Required</span><span class="token attribute-arguments"><span class="token punctuation">(</span>ErrorMessage <span class="token operator">=</span> <span class="token string">&quot;\u8D26\u53F7\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> UserName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// \u5BC6\u7801</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token punctuation">[</span><span class="token function">JsonProperty</span><span class="token punctuation">(</span><span class="token string">&quot;password&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u67D0\u63A7\u5236\u5668\u5185</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>  <span class="token punctuation">[</span><span class="token attribute"><span class="token class-name">HttpPost</span><span class="token attribute-arguments"><span class="token punctuation">(</span><span class="token punctuation">)</span></span></span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name">APIResult<span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span> <span class="token function">Login</span><span class="token punctuation">(</span><span class="token class-name">LoginView</span> user<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">return</span> APIResult<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Ok</span><span class="token generic class-name"><span class="token punctuation">&lt;</span><span class="token keyword">object</span><span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF7\u6C42</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>### \u767B\u5F55
POST https://{{hostname}}/api/login
content-type: application/json

{
  &quot;username&quot;: &quot;joly&quot;,
  &quot;password&quot;: &quot;123123&quot;
}

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9),c=[p];function o(l,i){return s(),a("div",null,c)}const r=n(e,[["render",o],["__file","Newtonsoft.Json.html.vue"]]);export{r as default};
