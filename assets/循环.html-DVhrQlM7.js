import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{a,e,o as n}from"./app-BVuN8Jn5.js";const t={};function l(h,i){return n(),a("div",null,i[0]||(i[0]=[e(`<h2 id="for" tabindex="-1"><a class="header-anchor" href="#for"><span>for</span></a></h2><h3 id="跳出循环的方式" tabindex="-1"><a class="header-anchor" href="#跳出循环的方式"><span>跳出循环的方式</span></a></h3><p>通过 <code>break</code></p><p><code>return</code> 也可跳出循环，但整个函数往下都不会再执行了</p><p>疑问：if 中的 break 是否会影响 for 的跳出</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">	console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">break</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 只会输出 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="for-in" tabindex="-1"><a class="header-anchor" href="#for-in"><span>for/in</span></a></h2><p>可以遍历对象，得到 key 值</p><p>当然也可遍历数组，会避开缺失成员</p><h2 id="break-用于-跳出循环或-switch。-if除外" tabindex="-1"><a class="header-anchor" href="#break-用于-跳出循环或-switch。-if除外"><span>break：用于 跳出循环或 switch。(if除外)</span></a></h2><h2 id="continue-不再往下执行-直接下一次循环" tabindex="-1"><a class="header-anchor" href="#continue-不再往下执行-直接下一次循环"><span>continue：不再往下执行，直接下一次循环</span></a></h2><p>不能 用于switch</p>`,12)]))}const p=s(t,[["render",l],["__file","循环.html.vue"]]),d=JSON.parse('{"path":"/old__/01_js/%E5%BE%AA%E7%8E%AF.html","title":"","lang":"zh-CN","frontmatter":{"description":"for 跳出循环的方式 通过 break return 也可跳出循环，但整个函数往下都不会再执行了 疑问：if 中的 break 是否会影响 for 的跳出 for/in 可以遍历对象，得到 key 值 当然也可遍历数组，会避开缺失成员 break：用于 跳出循环或 switch。(if除外) continue：不再往下执行，直接下一次循环 不能 用于...","head":[["meta",{"property":"og:url","content":"http://docs.cqlql.top/old__/01_js/%E5%BE%AA%E7%8E%AF.html"}],["meta",{"property":"og:site_name","content":"开发笔记"}],["meta",{"property":"og:description","content":"for 跳出循环的方式 通过 break return 也可跳出循环，但整个函数往下都不会再执行了 疑问：if 中的 break 是否会影响 for 的跳出 for/in 可以遍历对象，得到 key 值 当然也可遍历数组，会避开缺失成员 break：用于 跳出循环或 switch。(if除外) continue：不再往下执行，直接下一次循环 不能 用于..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T02:50:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T02:50:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T02:50:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Joly\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"for","slug":"for","link":"#for","children":[{"level":3,"title":"跳出循环的方式","slug":"跳出循环的方式","link":"#跳出循环的方式","children":[]}]},{"level":2,"title":"for/in","slug":"for-in","link":"#for-in","children":[]},{"level":2,"title":"break：用于 跳出循环或 switch。(if除外)","slug":"break-用于-跳出循环或-switch。-if除外","link":"#break-用于-跳出循环或-switch。-if除外","children":[]},{"level":2,"title":"continue：不再往下执行，直接下一次循环","slug":"continue-不再往下执行-直接下一次循环","link":"#continue-不再往下执行-直接下一次循环","children":[]}],"git":{"createdTime":1652927496000,"updatedTime":1730083825000,"contributors":[{"name":"陈桥黎","email":"cql.ql@qq.com","commits":1}]},"readingTime":{"minutes":0.41,"words":123},"filePathRelative":"__old__/01_js/循环.md","localizedDate":"2022年5月19日","autoDesc":true,"excerpt":"<h2>for</h2>\\n<h3>跳出循环的方式</h3>\\n<p>通过 <code>break</code></p>\\n<p><code>return</code> 也可跳出循环，但整个函数往下都不会再执行了</p>\\n<p>疑问：if 中的 break 是否会影响 for 的跳出</p>\\n<div class=\\"language-js line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"js\\" data-title=\\"js\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">for</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">var</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> i</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 0</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">i</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> &lt;</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\"> 100</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">; </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">i</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">++</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">\\tconsole</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">log</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">i</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">\\tif</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">true</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) {</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">break</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">// 只会输出 0</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>"}');export{p as comp,d as data};
