import{_ as n,Z as s,$ as a,a2 as t}from"./framework-d33190a3.js";const p={},e=t(`<ul><li><a href="#asyncio-%E5%AE%9A%E6%97%B6%E5%99%A8">asyncio 定时器</a></li><li><a href="#%E7%9B%B4%E6%8E%A5%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0">直接执行异步函数</a></li><li><a href="#path-%E8%B7%AF%E5%BE%84">path 路径</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E8%BD%AC%E6%8D%A2">字符串转换</a></li><li><a href="#import-%E6%A8%A1%E6%9D%BF">import 模板</a></li><li><a href="#json-%E8%BD%AC%E6%8D%A2">json 转换</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%BC%E6%8E%A5">字符串拼接</a></li><li><a href="#for-%E5%BE%AA%E7%8E%AF">for 循环</a></li><li><a href="#%E6%95%B0%E7%BB%84">数组</a></li><li><a href="#%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0">命令行参数</a></li><li><a href="#%E6%96%87%E4%BB%B6%E7%9B%AE%E5%BD%95">文件目录</a><ul><li><a href="#%E6%96%87%E4%BB%B6%E6%88%96%E7%9B%AE%E5%BD%95%E6%98%AF%E5%90%A6%E5%AD%98%E5%9C%A8">文件或目录是否存在</a></li><li><a href="#%E6%96%87%E4%BB%B6%E8%AF%BB%E5%86%99">文件读写</a></li><li><a href="#%E7%9B%AE%E5%BD%95%E6%93%8D%E4%BD%9C">目录操作</a></li></ul></li><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%8B%86%E5%88%86%E6%88%90%E6%95%B0%E7%BB%84">字符串拆分成数组</a></li><li><a href="#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E6%9B%BF%E6%8D%A2">正则表达式 替换</a></li><li><a href="#%E9%94%99%E8%AF%AF%E5%A4%84%E7%90%86-try-except-else">错误处理 try except else</a></li><li><a href="#%E6%A8%A1%E5%9D%97%E5%AF%BC%E5%85%A5">模块导入</a><ul><li><a href="#%E5%8A%A8%E6%80%81%E5%AF%BC%E5%85%A5%E6%A8%A1%E5%9D%97">动态导入模块</a></li><li><a href="#%E5%AF%BC%E5%85%A5%E4%B8%8A%E4%B8%80%E7%BA%A7%E6%A8%A1%E5%9D%97">导入上一级模块</a></li></ul></li></ul><h2 id="asyncio-定时器" tabindex="-1"><a class="header-anchor" href="#asyncio-定时器" aria-hidden="true">#</a> asyncio 定时器</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">timeout_callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">await</span> asyncio<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> 等待1s
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;echo!&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="直接执行异步函数" tabindex="-1"><a class="header-anchor" href="#直接执行异步函数" aria-hidden="true">#</a> 直接执行异步函数</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> asyncio
<span class="token keyword">import</span> TelethonPlus

<span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;xxx&#39;</span><span class="token punctuation">)</span>
    sent <span class="token operator">=</span> <span class="token keyword">await</span> TelethonPlus<span class="token punctuation">.</span>sendCode<span class="token punctuation">(</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>sent<span class="token punctuation">)</span>

loop <span class="token operator">=</span> asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span>
result <span class="token operator">=</span> loop<span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
loop<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="path-路径" tabindex="-1"><a class="header-anchor" href="#path-路径" aria-hidden="true">#</a> path 路径</h2><p>https://vimsky.com/examples/detail/python-method-pathlib.Path.resolve.html</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path

<span class="token keyword">print</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span>resolve<span class="token punctuation">(</span>Path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 程序启动目录</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span>Path<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>path<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 当前脚本绝对目录</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># 路径，包括文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串转换" tabindex="-1"><a class="header-anchor" href="#字符串转换" aria-hidden="true">#</a> 字符串转换</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">str</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span>Path<span class="token punctuation">(</span><span class="token string">&#39;session/&#39;</span><span class="token operator">+</span>session_name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="import-模板" tabindex="-1"><a class="header-anchor" href="#import-模板" aria-hidden="true">#</a> import 模板</h2><p>http://c.biancheng.net/view/2397.html</p><p>https://zhuanlan.zhihu.com/p/75955445</p><h2 id="json-转换" tabindex="-1"><a class="header-anchor" href="#json-转换" aria-hidden="true">#</a> json 转换</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>data <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token punctuation">{</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span> <span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;d&#39;</span> <span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">&#39;e&#39;</span> <span class="token punctuation">:</span> <span class="token number">5</span> <span class="token punctuation">}</span> <span class="token punctuation">]</span>

data2 <span class="token operator">=</span> json<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>data<span class="token punctuation">)</span>

<span class="token comment"># 将已编码的 JSON 字符串解码为 Python 对象</span>
json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span><span class="token string">&#39;{}&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串拼接" tabindex="-1"><a class="header-anchor" href="#字符串拼接" aria-hidden="true">#</a> 字符串拼接</h2><p>https://segmentfault.com/a/1190000015475309</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">{</span>chat<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">{</span>chat<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="for-循环" tabindex="-1"><a class="header-anchor" href="#for-循环" aria-hidden="true">#</a> for 循环</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">for</span> member <span class="token keyword">in</span> all_participants<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>member<span class="token punctuation">.</span><span class="token builtin">id</span><span class="token punctuation">)</span>

<span class="token comment"># key</span>
<span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> all_participants<span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="数组" tabindex="-1"><a class="header-anchor" href="#数组" aria-hidden="true">#</a> 数组</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token comment"># 带索引循环</span>
<span class="token keyword">for</span> i<span class="token punctuation">,</span> name <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>list_dir<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>i<span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">{</span>name<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="命令行参数" tabindex="-1"><a class="header-anchor" href="#命令行参数" aria-hidden="true">#</a> 命令行参数</h2><p>https://docs.python.org/zh-tw/3/library/argparse.html</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
<span class="token keyword">import</span> argparse

<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;main&#39;</span><span class="token punctuation">)</span>

parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span>description<span class="token operator">=</span><span class="token string">&#39;telegram api&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;phoneNumbers&#39;</span><span class="token punctuation">,</span> metavar<span class="token operator">=</span><span class="token string">&#39;phoneNumbers&#39;</span><span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;多个手机号&#39;</span><span class="token punctuation">)</span>
parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;-p&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;run&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_const&#39;</span><span class="token punctuation">,</span>
                    const<span class="token operator">=</span>main<span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">,</span>
                    <span class="token builtin">help</span><span class="token operator">=</span><span class="token string">&#39;手机号，可多个&#39;</span><span class="token punctuation">)</span>

args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>args<span class="token punctuation">.</span>phoneNumbers<span class="token punctuation">)</span>
args<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="文件目录" tabindex="-1"><a class="header-anchor" href="#文件目录" aria-hidden="true">#</a> 文件目录</h2><h3 id="文件或目录是否存在" tabindex="-1"><a class="header-anchor" href="#文件或目录是否存在" aria-hidden="true">#</a> 文件或目录是否存在</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">print</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>Path<span class="token punctuation">.</span>resolve<span class="token punctuation">(</span>Path<span class="token punctuation">(</span><span class="token string">&#39;proxy.py&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="文件读写" tabindex="-1"><a class="header-anchor" href="#文件读写" aria-hidden="true">#</a> 文件读写</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&quot;w+&quot;</span><span class="token punctuation">)</span>
<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span>
dataFile<span class="token punctuation">.</span>write<span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>

<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span>filePath<span class="token punctuation">,</span> <span class="token string">&quot;r&quot;</span><span class="token punctuation">)</span>
dataFile<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token builtin">file</span><span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="目录操作" tabindex="-1"><a class="header-anchor" href="#目录操作" aria-hidden="true">#</a> 目录操作</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">from</span> pathlib <span class="token keyword">import</span> Path
<span class="token keyword">import</span> os

sessionsDir <span class="token operator">=</span> Path<span class="token punctuation">.</span>absolute<span class="token punctuation">(</span>Path<span class="token punctuation">(</span><span class="token string">&#39;sessions&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 当前项目绝对路径再拼接sessions</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>sessionsDir<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>Path<span class="token punctuation">.</span>joinpath<span class="token punctuation">(</span>sessionsDir<span class="token punctuation">,</span> <span class="token string">&#39;123&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment"># 拼接路径</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>sessionsDir<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 不存在则创建</span>
    os<span class="token punctuation">.</span>mkdir<span class="token punctuation">(</span>sessionsDir<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="字符串拆分成数组" tabindex="-1"><a class="header-anchor" href="#字符串拆分成数组" aria-hidden="true">#</a> 字符串拆分成数组</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>content <span class="token operator">=</span> <span class="token string">&#39;1,2,3&#39;</span>
content <span class="token operator">=</span> content<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;,&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="正则表达式-替换" tabindex="-1"><a class="header-anchor" href="#正则表达式-替换" aria-hidden="true">#</a> 正则表达式 替换</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>name <span class="token operator">=</span> <span class="token string">&#39;111111.session&#39;</span>
name <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r&#39;\\.session$&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="错误处理-try-except-else" tabindex="-1"><a class="header-anchor" href="#错误处理-try-except-else" aria-hidden="true">#</a> 错误处理 try except else</h2><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;可能会出错&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;错误&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&#39;成功&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 输出异常消息</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">)</span>            <span class="token comment"># 触发异常</span>
<span class="token keyword">except</span> Exception <span class="token keyword">as</span> err<span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="模块导入" tabindex="-1"><a class="header-anchor" href="#模块导入" aria-hidden="true">#</a> 模块导入</h2><h3 id="动态导入模块" tabindex="-1"><a class="header-anchor" href="#动态导入模块" aria-hidden="true">#</a> 动态导入模块</h3><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">if</span> <span class="token boolean">False</span>
    lib <span class="token operator">=</span> <span class="token builtin">__import__</span><span class="token punctuation">(</span><span class="token string">&#39;lib.aa&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="导入上一级模块" tabindex="-1"><a class="header-anchor" href="#导入上一级模块" aria-hidden="true">#</a> 导入上一级模块</h3><p>https://docs.python.org/zh-cn/3/reference/import.html#package-relative-imports</p><p>https://blog.csdn.net/m0_47670683/article/details/108989698</p><p>待验证</p><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,46),o=[e];function i(c,l){return s(),a("div",null,o)}const r=n(p,[["render",i],["__file","python学习.html.vue"]]);export{r as default};
