import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,a as r,e as n,f as s,c as e,b as t,r as c}from"./app.06bcbfce.js";const l={},i=n("h2",{id:"\u8FDE\u63A5\u5B57\u7B26\u4E32",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8FDE\u63A5\u5B57\u7B26\u4E32","aria-hidden":"true"},"#"),s(" \u8FDE\u63A5\u5B57\u7B26\u4E32")],-1),u={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/how-to/concatenate-multiple-strings#stringbuilder",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/how-to/concatenate-multiple-strings",target:"_blank",rel:"noopener noreferrer"},k=n("h2",{id:"\u5B57\u7B26\u4E32\u683C\u5F0F",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u5B57\u7B26\u4E32\u683C\u5F0F","aria-hidden":"true"},"#"),s(" \u5B57\u7B26\u4E32\u683C\u5F0F")],-1),m={href:"https://learn.microsoft.com/zh-cn/dotnet/standard/base-types/standard-numeric-format-strings",target:"_blank",rel:"noopener noreferrer"},h=t(`<h3 id="\u8D27\u5E01\u683C\u5F0F-c" tabindex="-1"><a class="header-anchor" href="#\u8D27\u5E01\u683C\u5F0F-c" aria-hidden="true">#</a> \u8D27\u5E01\u683C\u5F0F <code>:C</code></h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">format</span><span class="token punctuation">:</span> <span class="token string">&quot;\u4F59\u989D: {0:C}&quot;</span><span class="token punctuation">,</span><span class="token named-parameter punctuation">arg0</span><span class="token punctuation">:</span> <span class="token number">1.126</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4F59\u989D\uFF1A \xA51.13</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u6570\u5B57\u683C\u5F0F-n" tabindex="-1"><a class="header-anchor" href="#\u6570\u5B57\u683C\u5F0F-n" aria-hidden="true">#</a> \u6570\u5B57\u683C\u5F0F <code>:N</code></h3><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;\u6570: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token number">10000</span></span><span class="token format-string"><span class="token punctuation">:</span>N</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10,000.00</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5B57\u7B26\u4E32\u5185\u63D2" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u5185\u63D2" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u5185\u63D2 <code>$</code></h2><p>\u884C\u5B57\u7B26\u4E32\u5185\u63D2\u5165\u5176\u4ED6\u5B57\u7B26\u4E32\u503C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> userName <span class="token operator">=</span> <span class="token string">&quot;&lt;Type your name here&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> date <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Today<span class="token punctuation">.</span><span class="token function">ToShortDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Use string interpolation to concatenate strings.</span>
<span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;Hello </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">userName</span><span class="token punctuation">}</span></span><span class="token string">. Today is </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">date</span><span class="token punctuation">}</span></span><span class="token string">.&quot;</span></span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7),g={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/how-to/concatenate-multiple-strings#string-interpolation",target:"_blank",rel:"noopener noreferrer"},v=t(`<h2 id="\u591A\u884C\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u591A\u884C\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u591A\u884C\u5B57\u7B26\u4E32 <code>&quot;&quot;&quot;</code></h2><p>\u4ECE C# 11 \u5F00\u59CB\u652F\u6301</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> embeddedXML <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>&quot;
       <span class="token operator">&lt;</span><span class="token class-name">element</span> attr <span class="token operator">=</span> <span class="token string">&quot;content&quot;</span><span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span><span class="token class-name">body</span> style<span class="token operator">=</span><span class="token string">&quot;normal&quot;</span><span class="token operator">&gt;</span>
               Here <span class="token keyword">is</span> <span class="token class-name">the</span> main text
           <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span>footer<span class="token operator">&gt;</span>
               Excerpts <span class="token keyword">from</span> <span class="token string">&quot;An amazing story&quot;</span>
           <span class="token operator">&lt;</span><span class="token operator">/</span>footer<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>element <span class="token operator">&gt;</span>
       <span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),b={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/programming-guide/strings/#raw-string-literals",target:"_blank",rel:"noopener noreferrer"};function f(_,q){const a=c("ExternalLinkIcon");return p(),r("div",null,[i,n("p",null,[s("\u5728\u4F7F\u7528\u5FAA\u73AF\u8FDE\u63A5\u5B57\u7B26\u4E32\u65F6\uFF0C\u5E94\u907F\u514D\u65F6\u7528 String.Concat \u6216 + \u8FD0\u7B97\u7B26\uFF0C\u5E94\u4F7F\u7528\u4F7F\u7528 "),n("a",u,[s("StringBuilder"),e(a)]),s(" \u4EE3\u66FF\u3002")]),n("p",null,[s("\u66F4\u591A\u4FE1\u606F\uFF1A"),n("a",d,[s("\u8FDE\u63A5\u5B57\u7B26\u4E32"),e(a)])]),k,n("p",null,[s("\u66F4\u591A\u4FE1\u606F\uFF1A"),n("a",m,[s("\u6807\u51C6\u6570\u5B57\u683C\u5F0F\u5B57\u7B26\u4E32 | Microsoft Learn"),e(a)])]),h,n("p",null,[s("\u66F4\u591A\u4FE1\u606F\uFF1A"),n("a",g,[s("\u5982\u4F55\u8FDE\u63A5\u591A\u4E2A\u5B57\u7B26\u4E32\uFF08C# \u6307\u5357\uFF09 | Microsoft Learn"),e(a)])]),v,n("p",null,[s("\u66F4\u591A\u4FE1\u606F\uFF1A"),n("a",b,[s("\u5B57\u7B26\u4E32 - C# \u7F16\u7A0B\u6307\u5357 | Microsoft Learn"),e(a)])])])}const w=o(l,[["render",f],["__file","string \u5B57\u7B26\u4E32.html.vue"]]);export{w as default};
