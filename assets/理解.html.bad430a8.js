import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o,a as c,e as n,f as s,c as t,b as p,r as i}from"./app.32d54781.js";const l={},u=n("h2",{id:"\u8FDB\u7A0B\u7EBF\u7A0B\u7406\u89E3",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u8FDB\u7A0B\u7EBF\u7A0B\u7406\u89E3","aria-hidden":"true"},"#"),s(" \u8FDB\u7A0B\u7EBF\u7A0B\u7406\u89E3")],-1),r=n("p",null,"\u4E00\u4E2A\u7A0B\u5E8F\u5C31\u662F\u4E00\u4E2A\u8FDB\u7A0B\u3002\u4E00\u4E2A\u8FDB\u7A0B\u6709\u4E00\u4E2A\u4E3B\u7EBF\u7A0B\uFF0C\u8FD8\u53EF\u4EE5\u62E5\u6709\u591A\u4E2A\u5DE5\u4F5C\u7EBF\u7A0B",-1),k=n("h2",{id:"\u7EBF\u7A0B\u6C60",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u7EBF\u7A0B\u6C60","aria-hidden":"true"},"#"),s(" \u7EBF\u7A0B\u6C60")],-1),d=n("li",null,"\u4EA4\u7ED9\u7CFB\u7EDF\u7BA1\u7406\u7EBF\u7A0B\u3002\u8FD9\u6837\u80FD\u591F\u66F4\u4E13\u6CE8\u5E94\u7528\u7A0B\u5E8F\u4EFB\u52A1\uFF0C\u800C\u975E\u7EBF\u7A0B\u7BA1\u7406\u3002",-1),v=n("li",null,"\u4E00\u65E6\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B\u5B8C\u6210\u4EFB\u52A1\uFF0C\u5B83\u5C06\u8FD4\u56DE\u7B49\u5F85\u961F\u5217\u4E2D\uFF0C\u7B49\u9700\u8981\u65F6\u7EE7\u7EED\u91CD\u7528\u3002\u907F\u514D\u521B\u5EFA\u65B0\u7EBF\u7A0B\u7684\u5F00\u9500\u3002",-1),m=n("li",null,"\u4E00\u4E2A\u8FDB\u7A0B\u53EA\u6709\u4E00\u4E2A\u7EBF\u7A0B\u6C60\u3002",-1),h={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.threading.threadpool.getmaxthreads?view=net-7.0",target:"_blank",rel:"noopener noreferrer"},b={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.threading.threadpool.setmaxthreads?view=net-7.0",target:"_blank",rel:"noopener noreferrer"},f=n("li",null,"Task \u4F7F\u7528\u7684\u662F\u7EBF\u7A0B\u6C60\u4E2D\u7684\u7EBF\u7A0B",-1),g=p(`<h2 id="task" tabindex="-1"><a class="header-anchor" href="#task" aria-hidden="true">#</a> Task</h2><p>\u4ECE\u7EBF\u7A0B\u6C60\u4E2D\u4F7F\u7528\u4E00\u4E2A\u7EBF\u7A0B</p><h2 id="lock-\u4E92\u65A5\u9501" tabindex="-1"><a class="header-anchor" href="#lock-\u4E92\u65A5\u9501" aria-hidden="true">#</a> lock \u4E92\u65A5\u9501</h2><p>\u591A\u7EBF\u7A0B\u540C\u65F6\u8BBF\u95EE\u4E00\u4E2A\u8D44\u6E90\u4F1A\u51FA\u95EE\u9898\u3002\u8FD9\u65F6\u5C31\u9700\u8981 lock \u9501\u3002</p><p>\u5E94\u7528\u4E86 lock \u7684\u53D8\u91CF\uFF0C\u53EA\u6709\u518D\u7B49\u5F85\u6B64\u65B9\u6CD5\u4E4B\u524D\u5B8C\u540E\uFF0C\u624D\u4F1A\u7EE7\u7EED\u6267\u884C\u4F7F\u7528\u4E86 lock \u6B64\u53D8\u91CF\u7684\u5176\u4ED6\u65B9\u6CD5\u3002</p><p>\u95EE\u9898\uFF1F\u5982\u679C lock \u5916\u56F4\u8FD8\u6709\u5176\u4ED6\u4EE3\u7801\uFF1F\u90A3\u4E48\u4F1A\u4E0E lock \u8BED\u53E5\u5305\u88F9\u7684\u4EE3\u7801\u5206\u5F00\u6267\u884C\u5417\uFF1F</p><p><strong>\u6B7B\u9501</strong>\uFF1A\u7EBF\u7A0BX\u9501\u5B9A\u53D8\u91CFA\uFF0C\u4F46\u4E00\u76F4\u6CA1\u6709\u91CA\u653E\u9501\u5B9A\uFF0C\u5BFC\u81F4\u5176\u4ED6\u7EBF\u7A0B\u9501\u5B9A\u53D8\u91CFA\u65F6\u4E00\u76F4\u963B\u585E\u3002</p><p><strong>\u907F\u514D\u6B7B\u9501</strong>\uFF1A\u4F7F\u7528 Monitor.TryEnter \u65B9\u6CD5\u7ED3\u5408 try-finally \u8BED\u53E5\u4EE3\u66FF lock\uFF0C\u5E76\u63D0\u4F9B\u8D85\u65F6\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Threading<span class="token punctuation">.</span>Tasks</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Diagnostics</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token keyword">static</span> <span class="token class-name">System<span class="token punctuation">.</span>Console</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">SynchronizingResourceAccess</span>
<span class="token punctuation">{</span>
  <span class="token keyword">class</span> <span class="token class-name">Program</span>
  <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token class-name">Random</span> r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">string</span></span> Message<span class="token punctuation">;</span> <span class="token comment">// a shared resource</span>
    <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">int</span></span> Counter<span class="token punctuation">;</span> <span class="token comment">// another shared resource</span>
    <span class="token keyword">static</span> <span class="token class-name"><span class="token keyword">object</span></span> conch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">object</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MethodA</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">try</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// \u4F7F\u7528 TryEnter \u5E76\u63D0\u4F9B 15s \u8D85\u65F6</span>
        Monitor<span class="token punctuation">.</span><span class="token function">TryEnter</span><span class="token punctuation">(</span>conch<span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
          Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          Message <span class="token operator">+=</span> <span class="token string">&quot;A&quot;</span><span class="token punctuation">;</span>
          Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> Counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">Write</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">finally</span>
      <span class="token punctuation">{</span>
        Monitor<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span>conch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">MethodB</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token keyword">try</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// \u4F7F\u7528 TryEnter \u5E76\u63D0\u4F9B 15s \u8D85\u65F6</span>
        Monitor<span class="token punctuation">.</span><span class="token function">TryEnter</span><span class="token punctuation">(</span>conch<span class="token punctuation">,</span> TimeSpan<span class="token punctuation">.</span><span class="token function">FromSeconds</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
          Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          Message <span class="token operator">+=</span> <span class="token string">&quot;B&quot;</span><span class="token punctuation">;</span>
          Interlocked<span class="token punctuation">.</span><span class="token function">Increment</span><span class="token punctuation">(</span><span class="token keyword">ref</span> Counter<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token function">Write</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">finally</span>
      <span class="token punctuation">{</span>
        Monitor<span class="token punctuation">.</span><span class="token function">Exit</span><span class="token punctuation">(</span>conch<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">static</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">Main</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> args<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token string">&quot;Please wait for the tasks to complete.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Stopwatch</span> watch <span class="token operator">=</span> Stopwatch<span class="token punctuation">.</span><span class="token function">StartNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token class-name">Task</span> a <span class="token operator">=</span> Task<span class="token punctuation">.</span>Factory<span class="token punctuation">.</span><span class="token function">StartNew</span><span class="token punctuation">(</span>MethodA<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">Task</span> b <span class="token operator">=</span> Task<span class="token punctuation">.</span>Factory<span class="token punctuation">.</span><span class="token function">StartNew</span><span class="token punctuation">(</span>MethodB<span class="token punctuation">)</span><span class="token punctuation">;</span>

      Task<span class="token punctuation">.</span><span class="token function">WaitAll</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">Task<span class="token punctuation">[</span><span class="token punctuation">]</span></span> <span class="token punctuation">{</span> a<span class="token punctuation">,</span> b <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;Results: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Message</span><span class="token punctuation">}</span></span><span class="token string">.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">watch<span class="token punctuation">.</span>ElapsedMilliseconds</span><span class="token format-string"><span class="token punctuation">:</span>#,##0</span><span class="token punctuation">}</span></span><span class="token string"> elapsed milliseconds.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">Counter</span><span class="token punctuation">}</span></span><span class="token string"> string modifications.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u539F\u5B50\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u539F\u5B50\u64CD\u4F5C" aria-hidden="true">#</a> \u539F\u5B50\u64CD\u4F5C</h2><p><strong>\u539F\u5B50</strong>\uFF1A\u4E0D\u80FD\u6BD4\u5206\u5272\u7684\u6700\u5C0F\u7C92\u5B50</p><p><strong>\u539F\u5B50\u64CD\u4F5C</strong>\uFF1A\u4E0D\u80FD\u88AB\u4E2D\u65AD\u7684\u4E00\u4E2A\u6216\u4E00\u7CFB\u5217\u64CD\u4F5C</p><p>\u591A\u4E2A\u7EBF\u7A0B\u540C\u65F6\u8FDB\u884C\u4E00\u4E2A\u64CD\u4F5C\uFF0C\u5982\u679C\u4E0D\u662F\u539F\u5B50\u7684\uFF0C\u90A3\u4E48\u53EF\u80FD\u4F1A\u51FA\u73B0\u4E00\u4E9B\u610F\u60F3\u4E0D\u5230\u7684\u6548\u679C\u3002</p><h2 id="thread\u4E0Etask\u7684\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#thread\u4E0Etask\u7684\u533A\u522B" aria-hidden="true">#</a> Thread\u4E0ETask\u7684\u533A\u522B</h2><p>Task \u662F Thread \u7684\u5C01\u88C5\uFF0CThread \u662F\u57FA\u7840</p>`,15),w={href:"https://www.cnblogs.com/liang24/p/13785480.html",target:"_blank",rel:"noopener noreferrer"},y=p(`<h2 id="task-factory-startnew-vs-new-task-start" tabindex="-1"><a class="header-anchor" href="#task-factory-startnew-vs-new-task-start" aria-hidden="true">#</a> \u201CTask.Factory.StartNew\u201D vs \u201Cnew Task(\u2026).Start\u201D</h2><p><code>Task.Factory.StartNew</code> \u80FD\u786E\u4FDD\u53EA\u8C03\u7528\u4E00\u6B21 start\uFF0C \u800C <code>new Task(\u2026).Start</code> \u53EF\u80FD\u5728\u5176\u4ED6\u5730\u65B9\u591A\u6B21\u8C03\u7528 start\uFF0C\u3002 \u4F46\u6709\u4E9B\u5730\u65B9\u8FD8\u662F\u9700\u8981 <code>new Task(\u2026).Start</code>\uFF0C\u89C1\u4E0B\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// \u9519\u8BEF\u7684\u4F8B\u5B50</span>
 <span class="token class-name">Task</span> t <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> Task<span class="token punctuation">.</span>Factory<span class="token punctuation">.</span><span class="token function">StartNew</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u2026</span>
      <span class="token comment">// \u8FD9\u91CC t\u4F1A\u88AB\u89C6\u4E3A null</span>
    t<span class="token punctuation">.</span><span class="token function">ContinueWith</span><span class="token punctuation">(</span><span class="token comment">/* \u2026 */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u6B63\u786E\u7684\u4F8B\u5B50</span>
<span class="token class-name">Task</span> t <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
t <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Task</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    <span class="token comment">// \u2026</span>
    t<span class="token punctuation">.</span><span class="token function">ContinueWith</span><span class="token punctuation">(</span><span class="token comment">/* \u2026 */</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
t<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),_={href:"https://devblogs.microsoft.com/pfxteam/task-factory-startnew-vs-new-task-start/",target:"_blank",rel:"noopener noreferrer"},T=n("h2",{id:"thread-sleep",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#thread-sleep","aria-hidden":"true"},"#"),s(" Thread.Sleep")],-1),S=n("p",null,"\u6302\u8D77\u5F53\u524D\u7EBF\u7A0B\u7684\u64CD\u4F5C",-1);function x(M,q){const a=i("ExternalLinkIcon");return o(),c("div",null,[u,r,k,n("ol",null,[d,v,m,n("li",null,[s("\u7EBF\u7A0B\u6570\u53D7\u5185\u5B58\u9650\u5236\uFF0C\u5982\u679C\u6240\u6709\u7EBF\u7A0B\u5FD9\u788C\uFF0C\u5219\u4F1A\u8FDB\u5165\u6392\u961F\u3002 "),n("ol",null,[n("li",null,[n("a",h,[s("ThreadPool.GetMaxThreads"),t(a)]),s(" \u83B7\u53D6\u6700\u5927\u7EBF\u7A0B\u6570\u3002")]),n("li",null,[n("a",b,[s("ThreadPool.SetMaxThreads"),t(a)]),s(" \u8BBE\u7F6E\u6700\u5927\u7EBF\u7A0B\u6570\u3002")])])]),f]),g,n("p",null,[n("a",w,[s("[.NET]Thread\u4E0ETask\u7684\u533A\u522B - \u5927\u6742\u8349 - \u535A\u5BA2\u56ED (cnblogs.com)"),t(a)])]),y,n("p",null,[s("\u539F\u6587\u94FE\u63A5\uFF1A"),n("a",_,[s('"Task.Factory.StartNew" vs "new Task(...).Start" - .NET Parallel Programming (microsoft.com)'),t(a)])]),T,S])}const W=e(l,[["render",x],["__file","\u7406\u89E3.html.vue"]]);export{W as default};
