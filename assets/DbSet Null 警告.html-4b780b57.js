import{_ as a,Z as e,$ as t,a0 as n,a1 as p,Y as o,a2 as c,E as l}from"./framework-d33190a3.js";const r={},i=c(`<p>给 DbSet 一个默认空值来解决。</p><p>那么，需不需要判断表是否存在呢？ 答案是不需要。因为一般来说，数据库表肯定是有的。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">NullableReferenceTypesContext</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">DbContext</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DbSet<span class="token punctuation">&lt;</span>Customer<span class="token punctuation">&gt;</span></span> Customers <span class="token operator">=&gt;</span> <span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Customer<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name">DbSet<span class="token punctuation">&lt;</span>Order<span class="token punctuation">&gt;</span></span> Orders <span class="token operator">=&gt;</span> <span class="token generic-method"><span class="token function">Set</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>Order<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnConfiguring</span><span class="token punctuation">(</span><span class="token class-name">DbContextOptionsBuilder</span> optionsBuilder<span class="token punctuation">)</span>
        <span class="token operator">=&gt;</span> optionsBuilder
            <span class="token punctuation">.</span><span class="token function">UseSqlServer</span><span class="token punctuation">(</span>
                <span class="token string">@&quot;Server=(localdb)\\mssqllocaldb;Database=EFNullableReferenceTypes;Trusted_Connection=True&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,4),u={href:"https://learn.microsoft.com/zh-cn/ef/core/miscellaneous/nullable-reference-types#dbcontext-and-dbset",target:"_blank",rel:"noopener noreferrer"};function d(k,m){const s=l("ExternalLinkIcon");return e(),t("div",null,[i,n("p",null,[n("a",u,[p("使用可为 null 引用类型 - EF Core | Microsoft Learn"),o(s)])])])}const v=a(r,[["render",d],["__file","DbSet Null 警告.html.vue"]]);export{v as default};
