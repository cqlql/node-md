import{_ as o,Z as l,$ as a,a0 as e,a1 as n,Y as r,a2 as s,E as c}from"./framework-d33190a3.js";const i={},d=s(`<h2 id="手动抛异常-throw" tabindex="-1"><a class="header-anchor" href="#手动抛异常-throw" aria-hidden="true">#</a> 手动抛异常 throw</h2><h3 id="throw-例子" tabindex="-1"><a class="header-anchor" href="#throw-例子" aria-hidden="true">#</a> throw 例子</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// IndexOutOfRangeException 是超出数组索引范围的异常</span>
<span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">IndexOutOfRangeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常见异常类" tabindex="-1"><a class="header-anchor" href="#常见异常类" aria-hidden="true">#</a> 常见异常类</h3>`,4),h=e("thead",null,[e("tr",null,[e("th",null,"异常类型"),e("th",null,"描述"),e("th",null,"示例")])],-1),u={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.exception",target:"_blank",rel:"noopener noreferrer"},_=e("td",null,"所有异常的基类。",-1),p=e("td",null,"无（使用此异常的派生类）。",-1),f={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.indexoutofrangeexception",target:"_blank",rel:"noopener noreferrer"},m=e("td",null,"仅当错误地对数组进行索引时，才由运行时引发。",-1),y=e("td",null,[n("在数组的有效范围外对数组进行索引："),e("br"),e("code",null,"arr[arr.Length+1]")],-1),g={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.nullreferenceexception",target:"_blank",rel:"noopener noreferrer"},x=e("td",null,"仅当引用 null 对象时，才由运行时引发。",-1),b=e("td",null,[e("code",null,"object o = null;"),e("br"),e("code",null,"o.ToString();")],-1),k={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.invalidoperationexception",target:"_blank",rel:"noopener noreferrer"},w=e("td",null,"当处于无效状态时，由方法引发。",-1),v=e("td",null,[n("从基础集合删除项后调用"),e("code",null,"Enumerator.MoveNext()"),n("。")],-1),E={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.argumentexception",target:"_blank",rel:"noopener noreferrer"},z=e("td",null,"所有自变量异常的基类。",-1),O=e("td",null,"无（使用此异常的派生类）。",-1),N={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.argumentnullexception",target:"_blank",rel:"noopener noreferrer"},I=e("td",null,"由不允许参数为 null 的方法引发。",-1),R=e("td",null,[e("code",null,"String s = null;"),e("br"),e("code",null,'"Calculate".IndexOf(s);')],-1),S={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.argumentoutofrangeexception",target:"_blank",rel:"noopener noreferrer"},L=e("td",null,"由验证自变量是否位于给定范围内的方法引发。",-1),V=e("td",null,[e("code",null,'String s = "string";'),e("br"),e("code",null,"s.Substring(s.Length+1);")],-1),A=e("h3",{id:"参考文档",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#参考文档","aria-hidden":"true"},"#"),n(" 参考文档：")],-1),B={href:"https://learn.microsoft.com/zh-cn/dotnet/standard/exceptions/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/throw",target:"_blank",rel:"noopener noreferrer"},T={href:"https://learn.microsoft.com/zh-cn/dotnet/standard/exceptions/how-to-explicitly-throw-exceptions",target:"_blank",rel:"noopener noreferrer"},j=e("h2",{id:"try-finally",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#try-finally","aria-hidden":"true"},"#"),n(" try-finally")],-1),M=e("p",null,"发生异常 finally 块将不会执行，程序终止。所以考虑异常情况还是需要 catch 块。",-1),P={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/try-finally",target:"_blank",rel:"noopener noreferrer"},Y=e("h2",{id:"try-catch-finally",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#try-catch-finally","aria-hidden":"true"},"#"),n(" try-catch-finally")],-1),Z={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/keywords/try-catch-finally",target:"_blank",rel:"noopener noreferrer"},$=e("h2",{id:"finally-块作用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#finally-块作用","aria-hidden":"true"},"#"),n(" finally 块作用")],-1),q=e("p",null,"既然发生异常如果没有使用 catch，finally 块也不会执行。那么，还要 finally 干嘛呢？？其实不是的， finally 主要解决 try 或 catch 中包括 return 的情况。在 try 或 catch 中包括 return 时，finally 块后面是不会执行的，但 finally 块会执行。",-1),D={href:"https://blog.csdn.net/P_newbie/article/details/106082028",target:"_blank",rel:"noopener noreferrer"};function F(G,H){const t=c("ExternalLinkIcon");return l(),a("div",null,[d,e("table",null,[h,e("tbody",null,[e("tr",null,[e("td",null,[e("a",u,[n("Exception"),r(t)])]),_,p]),e("tr",null,[e("td",null,[e("a",f,[n("IndexOutOfRangeException"),r(t)])]),m,y]),e("tr",null,[e("td",null,[e("a",g,[n("NullReferenceException"),r(t)])]),x,b]),e("tr",null,[e("td",null,[e("a",k,[n("InvalidOperationException"),r(t)])]),w,v]),e("tr",null,[e("td",null,[e("a",E,[n("ArgumentException"),r(t)])]),z,O]),e("tr",null,[e("td",null,[e("a",N,[n("ArgumentNullException"),r(t)])]),I,R]),e("tr",null,[e("td",null,[e("a",S,[n("ArgumentOutOfRangeException"),r(t)])]),L,V])])]),A,e("p",null,[e("a",B,[n("在 .NET 中处理和引发异常"),r(t)])]),e("p",null,[e("a",C,[n("throw"),r(t)])]),e("p",null,[e("a",T,[n("如何：显式抛出异常"),r(t)])]),j,M,e("p",null,[n("更多信息："),e("a",P,[n("try-finally"),r(t)])]),Y,e("p",null,[n("更多信息："),e("a",Z,[n("try-catch-finally"),r(t)])]),$,q,e("p",null,[n("参考文档："),e("a",D,[n("C# try-catch-finally 的 finally 的作用是什么？"),r(t)])])])}const K=o(i,[["render",F],["__file","异常处理.html.vue"]]);export{K as default};
