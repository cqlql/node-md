import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,a,b as t}from"./app.75f69592.js";const e={},p=t(`<h2 id="thread-\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#thread-\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> Thread \u57FA\u672C\u4F7F\u7528</h2><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// \u4F7F\u7528 Thread \u521B\u5EFA\u7684\u7EBF\u7A0B\uFF0C\u9ED8\u8BA4\u4E3A\u524D\u53F0\u7EBF\u7A0B</span>
<span class="token class-name">Thread</span> tmpThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Thread</span><span class="token punctuation">(</span>WriteFile<span class="token punctuation">)</span><span class="token punctuation">;</span>

tmpThread<span class="token punctuation">.</span>Name <span class="token operator">=</span> <span class="token string">&quot;TestThread&quot;</span><span class="token punctuation">;</span>

<span class="token comment">// \u8BBE\u7F6E\u4E3A\u540E\u53F0\u7EBF\u7A0B</span>
<span class="token comment">// tmpThread.IsBackground = true;</span>

tmpThread<span class="token punctuation">.</span><span class="token function">Start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">WriteFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">using</span> <span class="token punctuation">(</span><span class="token class-name">FileStream</span> fs <span class="token operator">=</span> File<span class="token punctuation">.</span><span class="token function">Open</span><span class="token punctuation">(</span><span class="token string">@&quot;D:\\test.txt&quot;</span><span class="token punctuation">,</span> FileMode<span class="token punctuation">.</span>Append<span class="token punctuation">,</span> FileAccess<span class="token punctuation">.</span>Write<span class="token punctuation">,</span> FileShare<span class="token punctuation">.</span>ReadWrite<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> buff <span class="token operator">=</span> System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>UnicodeEncoding<span class="token punctuation">.</span>UTF8<span class="token punctuation">.</span><span class="token function">GetBytes</span><span class="token punctuation">(</span><span class="token keyword">string</span><span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;Time:{0}\\r\\n&quot;</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            fs<span class="token punctuation">.</span><span class="token function">Write</span><span class="token punctuation">(</span>buff<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> buff<span class="token punctuation">.</span>Length<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        Thread<span class="token punctuation">.</span><span class="token function">Sleep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="thread-sleep" tabindex="-1"><a class="header-anchor" href="#thread-sleep" aria-hidden="true">#</a> Thread.Sleep</h2><p>\u6302\u8D77\u5F53\u524D\u7EBF\u7A0B\u7684\u64CD\u4F5C</p>`,4),c=[p];function o(i,u){return s(),a("div",null,c)}const d=n(e,[["render",o],["__file","Thread \u4F7F\u7528.html.vue"]]);export{d as default};
