import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{a as s,e as l,o as a}from"./app-B4pefAIU.js";const e={};function n(h,i){return a(),s("div",null,i[0]||(i[0]=[l(`<h2 id="性能" tabindex="-1"><a class="header-anchor" href="#性能"><span>性能</span></a></h2><h3 id="变量" tabindex="-1"><a class="header-anchor" href="#变量"><span>变量</span></a></h3><p>浏览器解析<strong>局部变量</strong>要比解析<strong>全局变量</strong>快，当然，比<strong>嵌套属性</strong>更快</p><p>所以，将全局变量或者嵌套属性赋值为局部变量性能更好</p><h3 id="函数" tabindex="-1"><a class="header-anchor" href="#函数"><span>函数</span></a></h3><p>构造函数中最好不要有函数声明，这样，new 完之后，所占内存应该会被回收</p><h2 id="可隐式转换为-true-false-的值" tabindex="-1"><a class="header-anchor" href="#可隐式转换为-true-false-的值"><span>可隐式转换为 true/ false 的值</span></a></h2><p><strong>表示false：</strong> undefined、null、NaN、0、&#39;&#39;</p><p><strong>表示true：</strong> 其余的都是 true</p><h2 id="调试" tabindex="-1"><a class="header-anchor" href="#调试"><span>调试</span></a></h2><p>可直接代码中 <code>debugger</code> 设置断点</p><h2 id="注释约定" tabindex="-1"><a class="header-anchor" href="#注释约定"><span>注释约定</span></a></h2><p>参考：<a href="https://github.com/tj/dox" target="_blank" rel="noopener noreferrer">https://github.com/tj/dox</a></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/**</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">example</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     utils.escape(&#39;&lt;script&gt;&lt;/script&gt;&#39;)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> *     // =&gt; &#39;&amp;lt;script&amp;gt;&amp;lt;/script&amp;gt;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">method</span><span style="--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> dialog.drag(status)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">param</span><span style="--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> {function|string}</span><span style="--shiki-light:#E45649;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> onStart</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  可通过 return false 阻止拖动触发</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">param</span><span style="--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> {function}</span><span style="--shiki-light:#E45649;--shiki-light-font-style:italic;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;"> [onUp]</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 可选。 可通过 return false 阻止拖动触发 </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * </span><span style="--shiki-light:#383A42;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">@</span><span style="--shiki-light:#A626A4;--shiki-light-font-style:italic;--shiki-dark:#C678DD;--shiki-dark-font-style:italic;">return</span><span style="--shiki-light:#C18401;--shiki-light-font-style:italic;--shiki-dark:#E5C07B;--shiki-dark-font-style:italic;"> {String}</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> escaped html</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> * */</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,14)]))}const p=t(e,[["render",n],["__file","01_js.html.vue"]]),o=JSON.parse(`{"path":"/old__/01_js.html","title":"","lang":"zh-CN","frontmatter":{"description":"性能 变量 浏览器解析局部变量要比解析全局变量快，当然，比嵌套属性更快 所以，将全局变量或者嵌套属性赋值为局部变量性能更好 函数 构造函数中最好不要有函数声明，这样，new 完之后，所占内存应该会被回收 可隐式转换为 true/ false 的值 表示false： undefined、null、NaN、0、'' 表示true： 其余的都是 true 调...","head":[["meta",{"property":"og:url","content":"http://docs.cqlql.top/old__/01_js.html"}],["meta",{"property":"og:site_name","content":"开发笔记"}],["meta",{"property":"og:description","content":"性能 变量 浏览器解析局部变量要比解析全局变量快，当然，比嵌套属性更快 所以，将全局变量或者嵌套属性赋值为局部变量性能更好 函数 构造函数中最好不要有函数声明，这样，new 完之后，所占内存应该会被回收 可隐式转换为 true/ false 的值 表示false： undefined、null、NaN、0、'' 表示true： 其余的都是 true 调..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T02:50:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T02:50:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T02:50:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"桥黎\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"性能","slug":"性能","link":"#性能","children":[{"level":3,"title":"变量","slug":"变量","link":"#变量","children":[]},{"level":3,"title":"函数","slug":"函数","link":"#函数","children":[]}]},{"level":2,"title":"可隐式转换为 true/ false 的值","slug":"可隐式转换为-true-false-的值","link":"#可隐式转换为-true-false-的值","children":[]},{"level":2,"title":"调试","slug":"调试","link":"#调试","children":[]},{"level":2,"title":"注释约定","slug":"注释约定","link":"#注释约定","children":[]}],"git":{"createdTime":1652927496000,"updatedTime":1730083825000,"contributors":[{"name":"陈桥黎","email":"cql.ql@qq.com","commits":1}]},"readingTime":{"minutes":0.62,"words":186},"filePathRelative":"__old__/01_js.md","localizedDate":"2022年5月19日","autoDesc":true,"excerpt":"<h2>性能</h2>\\n<h3>变量</h3>\\n<p>浏览器解析<strong>局部变量</strong>要比解析<strong>全局变量</strong>快，当然，比<strong>嵌套属性</strong>更快</p>\\n<p>所以，将全局变量或者嵌套属性赋值为局部变量性能更好</p>\\n<h3>函数</h3>\\n<p>构造函数中最好不要有函数声明，这样，new 完之后，所占内存应该会被回收</p>\\n<h2>可隐式转换为 true/ false 的值</h2>\\n<p><strong>表示false：</strong> undefined、null、NaN、0、''</p>\\n<p><strong>表示true：</strong> 其余的都是 true</p>"}`);export{p as comp,o as data};
