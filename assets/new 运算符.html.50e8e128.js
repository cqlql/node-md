import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,a as o,e as n,f as a,c as e,b as c,r as l}from"./app.d9262b2f.js";const i={},r=c(`<h2 id="\u5BF9\u8C61\u521D\u59CB\u5316\u5668" tabindex="-1"><a class="header-anchor" href="#\u5BF9\u8C61\u521D\u59CB\u5316\u5668" aria-hidden="true">#</a> \u5BF9\u8C61\u521D\u59CB\u5316\u5668</h2><p>\u4E0D\u4F7F\u7528\u6784\u9020\u51FD\u6570\uFF0C\u800C\u4F7F\u7528\u5BF9\u8C61\u521D\u59CB\u5316\u5668\u521B\u5EFA\u5E76\u521D\u59CB\u5316\u5B9E\u4F8B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">namespace</span> <span class="token namespace">CqlDotNet<span class="token punctuation">.</span>SDK<span class="token punctuation">.</span>APIEntity</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">APIResult</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> message <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">int</span></span> status <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token return-type class-name">Object<span class="token punctuation">?</span></span> result <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token return-type class-name">APIResult</span> <span class="token function">Ok</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">object</span></span> result<span class="token punctuation">)</span>
  <span class="token punctuation">{</span>
    <span class="token comment">// \u4F7F\u7528\u5BF9\u8C61\u521D\u59CB\u5316\u5668</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">APIResult</span> 
    <span class="token punctuation">{</span> 
      status <span class="token operator">=</span> <span class="token number">200</span><span class="token punctuation">,</span>
      result <span class="token operator">=</span> result 
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u4E5F\u53EF\u4EE5\u52A0\u4E0A\u62EC\u53F7\u3002\u6784\u9020\u51FD\u6570\u6CA1\u6709\u53C2\u6570\u53EF\u4EE5\u7701\u7565\u62EC\u53F7</span>
    <span class="token comment">// return new APIResult() { status = 200, result = result };</span>

    <span class="token comment">// \u76F8\u5F53\u4E8E</span>
    <span class="token comment">/*
    var apiResult = new APIResult()
    apiResult.status = 200
    apiResult.result = result
    */</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u533F\u540D\u7C7B\u578B\u5B9E\u4F8B\u5316" tabindex="-1"><a class="header-anchor" href="#\u533F\u540D\u7C7B\u578B\u5B9E\u4F8B\u5316" aria-hidden="true">#</a> \u533F\u540D\u7C7B\u578B\u5B9E\u4F8B\u5316</h2><p>\u4F7F\u7528\u5BF9\u8C61\u521D\u59CB\u5316\u5668\u65B9\u5F0F\u521B\u5EFA</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token punctuation">{</span> Greeting <span class="token operator">=</span> <span class="token string">&quot;Hello&quot;</span><span class="token punctuation">,</span> Name <span class="token operator">=</span> <span class="token string">&quot;World&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">example<span class="token punctuation">.</span>Greeting</span><span class="token punctuation">}</span></span><span class="token string">, </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">example<span class="token punctuation">.</span>Name</span><span class="token punctuation">}</span></span><span class="token string">!&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Output:</span>
<span class="token comment">// Hello, World!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u6863" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u6863" aria-hidden="true">#</a> \u53C2\u8003\u6587\u6863</h2>`,7),u={href:"https://www.bilibili.com/read/cv15412899",target:"_blank",rel:"noopener noreferrer"},d={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/programming-guide/classes-and-structs/object-and-collection-initializers",target:"_blank",rel:"noopener noreferrer"},k={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/language-reference/operators/new-operator",target:"_blank",rel:"noopener noreferrer"};function m(v,b){const s=l("ExternalLinkIcon");return p(),o("div",null,[r,n("p",null,[n("a",u,[a("\u7B2C 90 \u8BB2\uFF1AC# 3 \u4E4B\u5BF9\u8C61\u521D\u59CB\u5316\u5668"),e(s)])]),n("p",null,[n("a",d,[a("\u5BF9\u8C61\u548C\u96C6\u5408\u521D\u59CB\u503C\u8BBE\u5B9A\u9879 - C# \u7F16\u7A0B\u6307\u5357 | Microsoft Docs"),e(s)])]),n("p",null,[n("a",k,[a("new \u8FD0\u7B97\u7B26 - C# \u53C2\u8003 | Microsoft Docs"),e(s)])])])}const w=t(i,[["render",m],["__file","new \u8FD0\u7B97\u7B26.html.vue"]]);export{w as default};
