import{_ as n}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as s,a,b as e}from"./app.ab00bac6.js";const p={},t=e(`<ul><li><a href="#%E6%A8%A1%E5%9D%97%E5%AE%9A%E4%B9%89%E5%AF%BC%E5%87%BA">\u6A21\u5757\u5B9A\u4E49\\\u5BFC\u51FA</a></li><li><a href="#require-%E8%87%AA%E5%8A%A8%E5%AF%BB%E6%89%BE%E7%89%B9%E6%80%A7">require \u81EA\u52A8\u5BFB\u627E\u7279\u6027</a></li></ul><h2 id="\u6A21\u5757\u5B9A\u4E49-\u5BFC\u51FA" tabindex="-1"><a class="header-anchor" href="#\u6A21\u5757\u5B9A\u4E49-\u5BFC\u51FA" aria-hidden="true">#</a> \u6A21\u5757\u5B9A\u4E49\\\u5BFC\u51FA</h2><p>\u5BFC\u51FA 1\uFF1A\u76F4\u63A5\u5BFC\u51FA\u6A21\u5757</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// math.js</span>
<span class="token keyword">var</span> math <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">add</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
      args <span class="token operator">=</span> arguments<span class="token punctuation">,</span>
      l <span class="token operator">=</span> args<span class="token punctuation">.</span>length
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      sum <span class="token operator">+=</span> args<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> math
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5BFC\u51FA 2\uFF1A\u81EA\u5B9A\u4E49\u5BFC\u51FA\uFF0C\u53EF\u4EE5\u5BFC\u51FA\u591A\u4E2A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// math.js</span>
exports<span class="token punctuation">.</span><span class="token function-variable function">add</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
    args <span class="token operator">=</span> arguments<span class="token punctuation">,</span>
    l <span class="token operator">=</span> args<span class="token punctuation">.</span>length
  <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> l<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    sum <span class="token operator">+=</span> args<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> sum
<span class="token punctuation">}</span>

exports<span class="token punctuation">.</span><span class="token function-variable function">sub</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>

<span class="token comment">// app.js \u53EF\u4EE5\u8FD9\u6837\u4F7F\u7528</span>
<span class="token keyword">const</span> <span class="token punctuation">{</span> add <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./math&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u4F7F\u7528\uFF1A</strong></p><p>\u4E0A\u9762\u4E24\u4E2A\u4F8B\u5B50\u7684\u6548\u679C\u4E00\u81F4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// program.js</span>
<span class="token keyword">var</span> math <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;math&#39;</span><span class="token punctuation">)</span>
math<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="require-\u81EA\u52A8\u5BFB\u627E\u7279\u6027" tabindex="-1"><a class="header-anchor" href="#require-\u81EA\u52A8\u5BFB\u627E\u7279\u6027" aria-hidden="true">#</a> require \u81EA\u52A8\u5BFB\u627E\u7279\u6027</h2><p>\u4E0D\u6307\u660E\u8DEF\u5F84\u7684\u76F4\u63A5\u6A21\u5757\u8C03\u7528\uFF0C\u6BD4\u5982 require(&#39;gulp&#39;)\uFF0C\u5C06\u81EA\u52A8\u5728 node_modules \u4E2D\u5BFB\u627E\u3002</p><p>\u76EE\u5F55\u7EA7\u522B\u4E0D\u5F71\u54CD\u3002\u5373\u53EF\u4EE5\u662F node_modules \u540C\u7EA7\uFF0C\u4E5F\u53EF\u4EE5\u662F\u67D0\u5B50\u7EA7</p>`,12),o=[t];function c(i,l){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","\u4F7F\u7528 require.html.vue"]]);export{d as default};
