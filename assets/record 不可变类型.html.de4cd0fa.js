import{_ as a}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,a as t,e as n,f as p,c as o,b as c,r as l}from"./app.d5234182.js";const i={},r=c(`<h2 id="record-\u4E0D\u53EF\u53D8\u7C7B\u578B" tabindex="-1"><a class="header-anchor" href="#record-\u4E0D\u53EF\u53D8\u7C7B\u578B" aria-hidden="true">#</a> record \u4E0D\u53EF\u53D8\u7C7B\u578B</h2><p>\u4F7F\u7528 record class \u63CF\u8FF0\u4E0D\u53EF\u53D8\u7C7B\u578B\uFF0C\u662F\u5F15\u7528\u7C7B\u578B\uFF0Cclass \u5173\u952E\u5B57\u53EF\u4EE5\u7701\u7565\u3002</p><p>\u4F7F\u7528 record struct \u63CF\u8FF0\u4E0D\u53EF\u53D8\u7C7B\u578B\uFF0C\u662F\u503C\u7C7B\u578B\u3002</p><p>\u4EC5\u4EC5\u53EA\u662F\u8BED\u4E49\u800C\u5DF2\u3002\u9700\u8981\u7ED3\u5408 init \u4F7F\u7528\uFF0C\u5982\u679C\u4F7F\u7528 set \u4F9D\u7136\u8FD8\u662F\u53EF\u53D8\u7684\u3002</p><p>\u4EE5\u4E0B\u4E24\u4E2A\u793A\u4F8B\u6548\u679C\u662F\u4E00\u6837\u7684\uFF1A</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// \u7B80\u5199</span>
<span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> FirstName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// \u5B8C\u6574\u5199\u6CD5</span>
<span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token operator">!</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="with" tabindex="-1"><a class="header-anchor" href="#with" aria-hidden="true">#</a> with</h3><p>\u590D\u5236\u5BF9\u8C61\uFF0C\u5E76\u4E14\u53EF\u4F7F\u7528\u5BF9\u8C61\u521D\u59CB\u5316\u5668\u521D\u59CB\u5316</p><p>\u53EA\u80FD\u590D\u5236 record \u5BF9\u8C61\u6216\u8005 struct \u5BF9\u8C61\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Address <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> City <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Country <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> john <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Person</span>
<span class="token punctuation">{</span>
  City <span class="token operator">=</span> <span class="token string">&quot;Hyderabad&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> joly <span class="token operator">=</span> john <span class="token keyword">with</span> <span class="token punctuation">{</span> City <span class="token operator">=</span> <span class="token string">&quot;Bangalore&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">WriteLine</span><span class="token punctuation">(</span>john<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span>joly<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// False</span>
<span class="token function">WriteLine</span><span class="token punctuation">(</span>john<span class="token punctuation">.</span>City<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hyderabad</span>
<span class="token function">WriteLine</span><span class="token punctuation">(</span>joly<span class="token punctuation">.</span>City<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bangalore</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="init-only-\u4E0D\u53EF\u53D8\u5C5E\u6027" tabindex="-1"><a class="header-anchor" href="#init-only-\u4E0D\u53EF\u53D8\u5C5E\u6027" aria-hidden="true">#</a> init-only \u4E0D\u53EF\u53D8\u5C5E\u6027</h2><p>\u4E5F\u53EF\u7528\u4E8E class</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DbMetadata</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DbName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DbType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">DbMetadata</span> dbMetadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DbMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  DbName <span class="token operator">=</span> <span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span>
  DbType <span class="token operator">=</span> <span class="token string">&quot;Oracle&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u62A5\u9519\uFF0C\u4E0D\u5141\u8BB8</span>
dbMetadata<span class="token punctuation">.</span>DbType <span class="token operator">=</span> <span class="token string">&quot;SQL Server&quot;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u6863" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u6863" aria-hidden="true">#</a> \u53C2\u8003\u6587\u6863</h2>`,15),u={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/record",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=l("ExternalLinkIcon");return e(),t("div",null,[r,n("p",null,[n("a",u,[p("\u8BB0\u5F55 - C# \u53C2\u8003 | Microsoft Learn"),o(s)])])])}const y=a(i,[["render",k],["__file","record \u4E0D\u53EF\u53D8\u7C7B\u578B.html.vue"]]);export{y as default};
