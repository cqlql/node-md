import{_ as a,Z as n,$ as s,a2 as e}from"./framework-d33190a3.js";const p={},o=e(`<h2 id="js-数据编解码" tabindex="-1"><a class="header-anchor" href="#js-数据编解码" aria-hidden="true">#</a> js 数据编解码</h2><p>escape、unescape</p><p>对字符串进行编码。不编码的符号 <code>* @ - _ + . / 。</code></p><p>兼容性: 所有</p><h2 id="url-参数编码解码" tabindex="-1"><a class="header-anchor" href="#url-参数编码解码" aria-hidden="true">#</a> url 参数编码解码</h2><p>encodeURIComponent decodeURIComponent</p><p>避免#等特殊字符截断</p><p><code>-\\_.!~\\*&#39;()</code> 这些符合是不会被编码解码的</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token string">&#39;&lt;a href=&quot;http://passport.baidu.com/?u=&#39;</span> <span class="token operator">+</span>
  <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span><span class="token string">&#39;http://cang.baidu.com/bruce42&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span>
  <span class="token string">&#39;&quot;&gt;退出&lt;/a&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>兼容性: 所有</p><h2 id="url-编码解码" tabindex="-1"><a class="header-anchor" href="#url-编码解码" aria-hidden="true">#</a> url 编码解码</h2><p>encodeURI decodeURI</p><p>保证有特殊字符的 url 路径能进行访问</p><p><code>;/?:@&amp;=+$,#</code> 这些字符不会被编码解码</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location<span class="token punctuation">.</span>href<span class="token operator">=</span><span class="token function">encodeURI</span><span class="token punctuation">(</span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>cang<span class="token punctuation">.</span>baidu<span class="token punctuation">.</span>com<span class="token operator">/</span>百度存储<span class="token operator">/</span><span class="token keyword">do</span><span class="token operator">/</span>s<span class="token operator">?</span>word<span class="token operator">=</span>xx<span class="token operator">&amp;</span>ct<span class="token operator">=</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>兼容性: 所有</p><h2 id="对应的-php-编码解码" tabindex="-1"><a class="header-anchor" href="#对应的-php-编码解码" aria-hidden="true">#</a> 对应的 php 编码解码</h2><p>rawurlencode、rawurldecode 对应 encodeURIComponent decodeURIComponent</p><p>urlencode()、urldecode()应该对应？encodeURI decodeURI</p><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2><p>https://blog.csdn.net/da_mooo/article/details/84557046</p>`,21),t=[o];function c(r,d){return n(),s("div",null,t)}const i=a(p,[["render",c],["__file","编码、解码.html.vue"]]);export{i as default};
