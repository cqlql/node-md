import{_ as n,Z as s,$ as a,a2 as t}from"./framework-d33190a3.js";const e={},p=t(`<h2 id="概述" tabindex="-1"><a class="header-anchor" href="#概述" aria-hidden="true">#</a> 概述</h2><p>这里的日志记录只是实现在控制台或者文件输出消息</p><h2 id="debug-类-开发环境" tabindex="-1"><a class="header-anchor" href="#debug-类-开发环境" aria-hidden="true">#</a> Debug 类 - 开发环境</h2><ul><li>可用 Debug.WriteLine 代替 Console.WriteLine</li><li>Debug 相关代码将在发布后删除，所以只存在于开发环境</li></ul><h2 id="trace-类-开发和生产环境" tabindex="-1"><a class="header-anchor" href="#trace-类-开发和生产环境" aria-hidden="true">#</a> Trace 类 - 开发和生产环境</h2><p>开发和生产环境都将存在</p><h2 id="日志写入文件" tabindex="-1"><a class="header-anchor" href="#日志写入文件" aria-hidden="true">#</a> 日志写入文件</h2><h3 id="配置监听器" tabindex="-1"><a class="header-anchor" href="#配置监听器" aria-hidden="true">#</a> 配置监听器</h3><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>IO</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>Diagnostics</span><span class="token punctuation">;</span>

<span class="token comment">// 创建一个 Trace 和 Debug 的监听器，监听所有的日志输出操作，并写入文件</span>
Trace<span class="token punctuation">.</span>Listeners<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token constructor-invocation class-name">TextWriterTraceListener</span><span class="token punctuation">(</span>File<span class="token punctuation">.</span><span class="token function">CreateText</span><span class="token punctuation">(</span><span class="token string">&quot;log.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// 在每次写入后自动刷新缓冲区，并写入文件。否则只有在缓冲区满了后才写入文件。</span>
Trace<span class="token punctuation">.</span>AutoFlush <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="按级别记录日志" tabindex="-1"><a class="header-anchor" href="#按级别记录日志" aria-hidden="true">#</a> 按级别记录日志</h3><ol><li>安装配置文件相关包</li></ol><p>输入以下命令安装</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>dotnet add package Microsoft.Extensions.Configuration
dotnet add package Microsoft.Extensions.Configuration.Binder
dotnet add package Microsoft.Extensions.Configuration.FileExtensions
dotnet add package Microsoft.Extensions.Configuration.Json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>新建一个 appsettings.json 文件</li></ol><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;PacktSwitch&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;Level&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>开始编写按级别记录日志</li></ol><p>在 appsettings.json 文件修改后，运行时的 ts 值也会发生改变</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">var</span></span> builder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ConfigurationBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">SetBasePath</span><span class="token punctuation">(</span>Directory<span class="token punctuation">.</span><span class="token function">GetCurrentDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">AddJsonFile</span><span class="token punctuation">(</span><span class="token string">&quot;appsettings.json&quot;</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">optional</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token named-parameter punctuation">reloadOnChange</span><span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name">IConfigurationRoot</span> configuration <span class="token operator">=</span> builder<span class="token punctuation">.</span><span class="token function">Build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> ts <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">TraceSwitch</span><span class="token punctuation">(</span>
  <span class="token named-parameter punctuation">displayName</span><span class="token punctuation">:</span> <span class="token string">&quot;PacktSwitch&quot;</span><span class="token punctuation">,</span>
  <span class="token named-parameter punctuation">description</span><span class="token punctuation">:</span> <span class="token string">&quot;This switch is set via a JSON config.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

configuration<span class="token punctuation">.</span><span class="token function">GetSection</span><span class="token punctuation">(</span><span class="token string">&quot;PacktSwitch&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">Bind</span><span class="token punctuation">(</span>ts<span class="token punctuation">)</span><span class="token punctuation">;</span>

Trace<span class="token punctuation">.</span><span class="token function">WriteLineIf</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>TraceError<span class="token punctuation">,</span> <span class="token string">&quot;Trace error&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Trace<span class="token punctuation">.</span><span class="token function">WriteLineIf</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>TraceWarning<span class="token punctuation">,</span> <span class="token string">&quot;Trace warning&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Trace<span class="token punctuation">.</span><span class="token function">WriteLineIf</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>TraceInfo<span class="token punctuation">,</span> <span class="token string">&quot;Trace information&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Trace<span class="token punctuation">.</span><span class="token function">WriteLineIf</span><span class="token punctuation">(</span>ts<span class="token punctuation">.</span>TraceVerbose<span class="token punctuation">,</span> <span class="token string">&quot;Trace verbose&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),o=[p];function c(i,u){return s(),a("div",null,o)}const r=n(e,[["render",c],["__file","日志记录.html.vue"]]);export{r as default};
