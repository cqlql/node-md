import{_ as r,Z as d,$ as t,a0 as a,a1 as e,Y as s,a2 as i,E as c}from"./framework-d33190a3.js";const o={},l=i(`<h2 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令" aria-hidden="true">#</a> 常用命令</h2><h3 id="更新-npm" tabindex="-1"><a class="header-anchor" href="#更新-npm" aria-hidden="true">#</a> 更新 npm</h3><p>npm install npm@latest -g</p><h3 id="更新包" tabindex="-1"><a class="header-anchor" href="#更新包" aria-hidden="true">#</a> 更新包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 先更新 package.json 版本</span>
<span class="token function">npm</span> update <span class="token builtin class-name">local</span> <span class="token comment"># 更新所有本地包</span>
<span class="token function">npm</span> update global <span class="token comment"># 全局包</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="删除包" tabindex="-1"><a class="header-anchor" href="#删除包" aria-hidden="true">#</a> 删除包</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> uninstall <span class="token parameter variable">-g</span> <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span>
<span class="token function">npm</span> uninstall <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span>

<span class="token comment"># 可简写</span>
<span class="token function">npm</span> uni <span class="token operator">&lt;</span>package<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="查看过时本地包" tabindex="-1"><a class="header-anchor" href="#查看过时本地包" aria-hidden="true">#</a> 查看过时本地包</h3><p>npm outdated</p><h3 id="查看本地包列表" tabindex="-1"><a class="header-anchor" href="#查看本地包列表" aria-hidden="true">#</a> 查看本地包列表</h3><p>npm ls</p><h2 id="npm-项目路径最好不要包含-符号" tabindex="-1"><a class="header-anchor" href="#npm-项目路径最好不要包含-符号" aria-hidden="true">#</a> npm 项目路径最好不要包含$符号</h2><p>即文件夹最好不用<code>$</code>命名，因为<code>$</code>为命令关键字</p><h2 id="通过-npm-执行-package-json-准备的命令" tabindex="-1"><a class="header-anchor" href="#通过-npm-执行-package-json-准备的命令" aria-hidden="true">#</a> 通过 npm 执行 package.json 准备的命令</h2><p>scripts 字段</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm run dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>部分命令无需加 run，比如 start，可直接</p><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="下载加速" tabindex="-1"><a class="header-anchor" href="#下载加速" aria-hidden="true">#</a> 下载加速</h2><h3 id="使用-mirror-config-china-推荐" tabindex="-1"><a class="header-anchor" href="#使用-mirror-config-china-推荐" aria-hidden="true">#</a> 使用 mirror-config-china [推荐]</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 安装</span>
<span class="token function">npm</span> i <span class="token parameter variable">-g</span> mirror-config-china <span class="token parameter variable">--registry</span><span class="token operator">=</span>https://registry.npm.taobao.org
<span class="token comment"># 检查是否安装成功</span>
<span class="token function">npm</span> config list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,21),p={href:"https://www.npmjs.com/package/mirror-config-china",target:"_blank",rel:"noopener noreferrer"},u=a("h3",{id:"切换仓库",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#切换仓库","aria-hidden":"true"},"#"),e(" 切换仓库")],-1),m={href:"https://www.jianshu.com/p/c5609434cd60",target:"_blank",rel:"noopener noreferrer"},h=i(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> config <span class="token function">ls</span>

<span class="token comment"># https://registry.npmjs.org 原仓库</span>
<span class="token comment"># https://registry.npm.taobao.org 淘宝</span>

<span class="token function">npm</span> config get registry <span class="token comment"># 查看创库地址</span>
<span class="token function">npm</span> config <span class="token builtin class-name">set</span> registry https://registry.npm.taobao.org <span class="token comment"># 设置淘宝仓库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="或者安装-cnpm-命令" tabindex="-1"><a class="header-anchor" href="#或者安装-cnpm-命令" aria-hidden="true">#</a> 或者安装 cnpm 命令</h3><div class="language-cmd line-numbers-mode" data-ext="cmd"><pre class="language-cmd"><code>npm install -g cnpm --registry=https://registry.npm.taobao.org
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="发布包" tabindex="-1"><a class="header-anchor" href="#发布包" aria-hidden="true">#</a> 发布包</h2><p><strong>首先关联账号</strong></p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm adduser
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>指定要发布的文件</strong></p>`,7),v={href:"https://docs.npmjs.com/files/package.json#files",target:"_blank",rel:"noopener noreferrer"},g=i(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>{
    &quot;files&quot;: [
      &quot;dist&quot;,
      &quot;src&quot;,
      &quot;lib/*&quot;
    ],
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>发布</strong></p><ul><li>当前所在文件夹</li><li>不加点也行</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm publish .
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="更新发布包" tabindex="-1"><a class="header-anchor" href="#更新发布包" aria-hidden="true">#</a> 更新发布包</h3><p>跟<a href="#%E5%8F%91%E5%B8%83%E5%8C%85">发布包</a>一样，也是通过<code>npm publish</code>命令，只是要修改版本</p><h2 id="package-json" tabindex="-1"><a class="header-anchor" href="#package-json" aria-hidden="true">#</a> package.json</h2><h3 id="命令创建-package-json-文件" tabindex="-1"><a class="header-anchor" href="#命令创建-package-json-文件" aria-hidden="true">#</a> 命令创建 package.json 文件</h3><p>将在命令运行目录创建</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="main-字段" tabindex="-1"><a class="header-anchor" href="#main-字段" aria-hidden="true">#</a> main 字段</h3><p>nodejs 在 require 模块时，将以此字段指向的 js 文件作为入口</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;main&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./lib/app.js&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="scripts-字段-脚本执行" tabindex="-1"><a class="header-anchor" href="#scripts-字段-脚本执行" aria-hidden="true">#</a> scripts 字段：脚本执行</h3><p>可直接运行非全局的模块命令。<br> 因为默认会在<code>./node_modules/.bin</code>中寻找命令。但也只限于与<code>package.json</code>同级的<code>node_modules</code>中寻找。</p><p>假如是某其他文件夹的<code>package.json</code>，需指定命令的绝对路径：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;E:/_work/node_modules/.bin/react-scripts start&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="私有仓库部署" tabindex="-1"><a class="header-anchor" href="#私有仓库部署" aria-hidden="true">#</a> 私有仓库部署</h2>`,18),b={href:"https://verdaccio.org/",target:"_blank",rel:"noopener noreferrer"},k={href:"https://blog.csdn.net/weixin_33757911/article/details/91447376",target:"_blank",rel:"noopener noreferrer"};function f(x,_){const n=c("ExternalLinkIcon");return d(),t("div",null,[l,a("p",null,[a("a",p,[e("mirror-config-china 文档"),s(n)])]),u,a("p",null,[a("a",m,[e("NPM 切换仓库"),s(n)])]),h,a("p",null,[e("通过 pageage.json files 指定。"),a("a",v,[e("查看官方文档"),s(n)])]),g,a("p",null,[e("使用 "),a("a",b,[e("verdaccio"),s(n)]),e(" 部署")]),a("p",null,[a("a",k,[e("超简单的 npm 私有库搭建——verdaccio"),s(n)])])])}const q=r(o,[["render",f],["__file","包管理器 npm.html.vue"]]);export{q as default};
