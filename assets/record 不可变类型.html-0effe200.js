import{_ as a,Z as e,$ as t,a0 as n,a1 as p,Y as o,a2 as c,E as l}from"./framework-d33190a3.js";const i={},r=c(`<h2 id="record-不可变类型" tabindex="-1"><a class="header-anchor" href="#record-不可变类型" aria-hidden="true">#</a> record 不可变类型</h2><p>使用 record class 描述不可变类型，是引用类型，class 关键字可以省略。</p><p>使用 record struct 描述不可变类型，是值类型。</p><p>仅仅只是语义而已。需要结合 init 使用，如果使用 set 依然还是可变的。</p><p>以下两个示例效果是一样的：</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 简写</span>
<span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> FirstName<span class="token punctuation">,</span> <span class="token class-name"><span class="token keyword">string</span></span> LastName<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token comment">// 完整写法</span>
<span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token operator">!</span><span class="token punctuation">;</span>
    <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">default</span><span class="token operator">!</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="with" tabindex="-1"><a class="header-anchor" href="#with" aria-hidden="true">#</a> with</h3><p>复制对象，并且可使用对象初始化器初始化</p><p>只能复制 record 对象或者 struct 对象。</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Person</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> FirstName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> LastName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Address <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> City <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> Country <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name"><span class="token keyword">var</span></span> john <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Person</span>
<span class="token punctuation">{</span>
  City <span class="token operator">=</span> <span class="token string">&quot;Hyderabad&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token class-name"><span class="token keyword">var</span></span> joly <span class="token operator">=</span> john <span class="token keyword">with</span> <span class="token punctuation">{</span> City <span class="token operator">=</span> <span class="token string">&quot;Bangalore&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token function">WriteLine</span><span class="token punctuation">(</span>john<span class="token punctuation">.</span><span class="token function">Equals</span><span class="token punctuation">(</span>joly<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// False</span>
<span class="token function">WriteLine</span><span class="token punctuation">(</span>john<span class="token punctuation">.</span>City<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Hyderabad</span>
<span class="token function">WriteLine</span><span class="token punctuation">(</span>joly<span class="token punctuation">.</span>City<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Bangalore</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="init-only-不可变属性" tabindex="-1"><a class="header-anchor" href="#init-only-不可变属性" aria-hidden="true">#</a> init-only 不可变属性</h2><p>也可用于 class</p><div class="language-csharp line-numbers-mode" data-ext="cs"><pre class="language-csharp"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DbMetadata</span>
<span class="token punctuation">{</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DbName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span></span> DbType <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">init</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token class-name">DbMetadata</span> dbMetadata <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">DbMetadata</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  DbName <span class="token operator">=</span> <span class="token string">&quot;Test&quot;</span><span class="token punctuation">,</span>
  DbType <span class="token operator">=</span> <span class="token string">&quot;Oracle&quot;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// 报错，不允许</span>
dbMetadata<span class="token punctuation">.</span>DbType <span class="token operator">=</span> <span class="token string">&quot;SQL Server&quot;</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考文档" tabindex="-1"><a class="header-anchor" href="#参考文档" aria-hidden="true">#</a> 参考文档</h2>`,15),u={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/language-reference/builtin-types/record",target:"_blank",rel:"noopener noreferrer"};function k(d,v){const s=l("ExternalLinkIcon");return e(),t("div",null,[r,n("p",null,[n("a",u,[p("记录 - C# 参考 | Microsoft Learn"),o(s)])])])}const b=a(i,[["render",k],["__file","record 不可变类型.html.vue"]]);export{b as default};
