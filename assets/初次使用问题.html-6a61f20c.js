import{_ as o,Z as t,$ as r,a0 as e,a1 as a,Y as c,a2 as n,E as l}from"./framework-d33190a3.js";const d={},i=n(`<h2 id="安装问题" tabindex="-1"><a class="header-anchor" href="#安装问题" aria-hidden="true">#</a> 安装问题</h2><p><code>npm i -D electron</code> 总是安装失败。因为需要在 github 上下载 Electron 的预编译二进制文件，但国内网络环境访问 github 非常不稳定，所以需要更换镜像源。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$env</span>:ELECTRON_MIRROR<span class="token operator">=</span><span class="token string">&quot;https://npmmirror.com/mirrors/electron/&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>$env:</code> 命令是 powershell 设置环境变量的方式，如果是 linux，需要使用 <code>export</code> 命令。</p><p><code>$env:</code> 是临时的，当前 powershell 关闭后需重新设置。</p>`,5),p={href:"https://www.electronjs.org/zh/docs/latest/tutorial/installation#%E8%87%AA%E5%AE%9A%E4%B9%89%E9%95%9C%E5%83%8F%E5%92%8C%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"},h=n(`<h2 id="打包问题" tabindex="-1"><a class="header-anchor" href="#打包问题" aria-hidden="true">#</a> 打包问题</h2><p>使用 Electron Forge 打包时依然出现了镜像下载问题，这里我直接使用代理解决。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token variable">$env</span>:HTTP_PROXY<span class="token operator">=</span><span class="token string">&quot;http://127.0.0.1:10087&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function _(u,m){const s=l("ExternalLinkIcon");return t(),r("div",null,[i,e("p",null,[a("解决方法参考了"),e("a",p,[a("这里"),c(s)])]),h])}const b=o(d,[["render",_],["__file","初次使用问题.html.vue"]]);export{b as default};
