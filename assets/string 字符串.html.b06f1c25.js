import{_ as o}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,a as c,e as s,f as n,c as t,b as e,r as i}from"./app.747f1860.js";const l={},r=s("h2",{id:"\u8FDE\u63A5\u5B57\u7B26\u4E32",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u8FDE\u63A5\u5B57\u7B26\u4E32","aria-hidden":"true"},"#"),n(" \u8FDE\u63A5\u5B57\u7B26\u4E32")],-1),u={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/how-to/concatenate-multiple-strings#stringbuilder",target:"_blank",rel:"noopener noreferrer"},d=e(`<div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// Use StringBuilder for concatenation in tight loops.</span>
<span class="token class-name"><span class="token keyword">var</span></span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">System<span class="token punctuation">.</span>Text<span class="token punctuation">.</span>StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    sb<span class="token punctuation">.</span><span class="token function">AppendLine</span><span class="token punctuation">(</span>i<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>sb<span class="token punctuation">.</span><span class="token function">ToString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k={href:"https://docs.microsoft.com/zh-cn/dotnet/csharp/how-to/concatenate-multiple-strings",target:"_blank",rel:"noopener noreferrer"},m=e(`<h2 id="\u5B57\u7B26\u4E32\u63D2\u503C" tabindex="-1"><a class="header-anchor" href="#\u5B57\u7B26\u4E32\u63D2\u503C" aria-hidden="true">#</a> \u5B57\u7B26\u4E32\u63D2\u503C</h2><h3 id="" tabindex="-1"><a class="header-anchor" href="#" aria-hidden="true">#</a> <code>$</code></h3><p>\u884C\u5B57\u7B26\u4E32\u5185\u63D2\u5165\u5176\u4ED6\u5B57\u7B26\u4E32\u503C\u3002</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> userName <span class="token operator">=</span> <span class="token string">&quot;&lt;Type your name here&gt;&quot;</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">string</span></span> date <span class="token operator">=</span> DateTime<span class="token punctuation">.</span>Today<span class="token punctuation">.</span><span class="token function">ToShortDateString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Use string interpolation to concatenate strings.</span>
<span class="token class-name"><span class="token keyword">string</span></span> str <span class="token operator">=</span> <span class="token interpolation-string"><span class="token string">$&quot;Hello </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">userName</span><span class="token punctuation">}</span></span><span class="token string">. Today is </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">date</span><span class="token punctuation">}</span></span><span class="token string">.&quot;</span></span><span class="token punctuation">;</span>
System<span class="token punctuation">.</span>Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),h={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/how-to/concatenate-multiple-strings#string-interpolation",target:"_blank",rel:"noopener noreferrer"},v=s("h3",{id:"string-format",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#string-format","aria-hidden":"true"},"#"),n(),s("code",null,"String.Format")],-1),g={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.string.format?view=net-6.0#control-spacing",target:"_blank",rel:"noopener noreferrer"},b={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.string.format?view=net-6.0#control-alignment",target:"_blank",rel:"noopener noreferrer"},f={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.string.format?view=net-6.0#custom-formatting-operations",target:"_blank",rel:"noopener noreferrer"},_={href:"https://learn.microsoft.com/zh-cn/dotnet/api/system.string.format?view=net-6.0",target:"_blank",rel:"noopener noreferrer"},q=e(`<div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// 1. \u63A7\u5236\u683C\u5F0F</span>
<span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;It is now {0:d} at {0:t}&quot;</span><span class="token punctuation">,</span> DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Output similar to: &#39;It is now 4/10/2015 at 10:04 AM&#39;</span>

<span class="token comment">// 2. \u591A\u4E2A</span>
<span class="token class-name"><span class="token keyword">string</span></span> s <span class="token operator">=</span> String<span class="token punctuation">.</span><span class="token function">Format</span><span class="token punctuation">(</span><span class="token string">&quot;At {0}, the temperature is {1}\xB0C.&quot;</span><span class="token punctuation">,</span>
                         DateTime<span class="token punctuation">.</span>Now<span class="token punctuation">,</span> <span class="token number">20.4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Output similar to: &#39;At 4/10/2015 9:29:41 AM, the temperature is 20.4\xB0C.&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u591A\u884C\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u591A\u884C\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u591A\u884C\u5B57\u7B26\u4E32 <code>&quot;&quot;&quot;</code></h2><p>\u4ECE C# 11 \u5F00\u59CB\u652F\u6301</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">string</span></span> embeddedXML <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>&quot;
       <span class="token operator">&lt;</span><span class="token class-name">element</span> attr <span class="token operator">=</span> <span class="token string">&quot;content&quot;</span><span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span><span class="token class-name">body</span> style<span class="token operator">=</span><span class="token string">&quot;normal&quot;</span><span class="token operator">&gt;</span>
               Here <span class="token keyword">is</span> <span class="token class-name">the</span> main text
           <span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">&gt;</span>
           <span class="token operator">&lt;</span>footer<span class="token operator">&gt;</span>
               Excerpts <span class="token keyword">from</span> <span class="token string">&quot;An amazing story&quot;</span>
           <span class="token operator">&lt;</span><span class="token operator">/</span>footer<span class="token operator">&gt;</span>
       <span class="token operator">&lt;</span><span class="token operator">/</span>element <span class="token operator">&gt;</span>
       <span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),y={href:"https://learn.microsoft.com/zh-cn/dotnet/csharp/programming-guide/strings/#raw-string-literals",target:"_blank",rel:"noopener noreferrer"},w=s("h2",{id:"\u5B57\u7B26\u4E32\u683C\u5F0F",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u5B57\u7B26\u4E32\u683C\u5F0F","aria-hidden":"true"},"#"),n(" \u5B57\u7B26\u4E32\u683C\u5F0F")],-1),x={href:"https://learn.microsoft.com/zh-cn/dotnet/standard/base-types/formatting-types",target:"_blank",rel:"noopener noreferrer"},S=e(`<div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token comment">// \u8D27\u5E01\u683C\u5F0F</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token named-parameter punctuation">format</span><span class="token punctuation">:</span> <span class="token string">&quot;\u4F59\u989D: {0:C}&quot;</span><span class="token punctuation">,</span><span class="token named-parameter punctuation">arg0</span><span class="token punctuation">:</span> <span class="token number">1.126</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u4F59\u989D\uFF1A \xA51.13</span>

<span class="token comment">// \u6570\u5B57\u683C\u5F0F</span>
Console<span class="token punctuation">.</span><span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;\u6570: </span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp"><span class="token number">10000</span></span><span class="token format-string"><span class="token punctuation">:</span>N</span><span class="token punctuation">}</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10,000.00</span>

<span class="token comment">// \u8FD9\u91CC\u6D89\u53CA &#39;#&#39; &#39;0&#39; \u5360\u4F4D\u7B26\uFF0C&#39;,&#39; \u5206\u9694\u7B26</span>
<span class="token function">WriteLine</span><span class="token punctuation">(</span><span class="token interpolation-string"><span class="token string">$&quot;</span><span class="token interpolation"><span class="token punctuation">{</span><span class="token expression language-csharp">timer<span class="token punctuation">.</span>ElapsedMilliseconds</span><span class="token format-string"><span class="token punctuation">:</span>#,##0</span><span class="token punctuation">}</span></span><span class="token string">ms elapsed.&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function C(L,T){const a=i("ExternalLinkIcon");return p(),c("div",null,[r,s("p",null,[n("\u5728\u4F7F\u7528\u5FAA\u73AF\u8FDE\u63A5\u5B57\u7B26\u4E32\u65F6\uFF0C\u5E94\u907F\u514D\u65F6\u7528 String.Concat \u6216 + \u8FD0\u7B97\u7B26\uFF0C\u5E94\u4F7F\u7528\u4F7F\u7528 "),s("a",u,[n("StringBuilder"),t(a)]),n(" \u4EE3\u66FF\u3002")]),d,s("p",null,[n("\u66F4\u591A\u4FE1\u606F\uFF1A"),s("a",k,[n("\u8FDE\u63A5\u5B57\u7B26\u4E32"),t(a)])]),m,s("p",null,[n("\u66F4\u591A\u4FE1\u606F\uFF1A"),s("a",h,[n("\u5982\u4F55\u8FDE\u63A5\u591A\u4E2A\u5B57\u7B26\u4E32\uFF08C# \u6307\u5357\uFF09 | Microsoft Learn"),t(a)])]),v,s("p",null,[n("\u529F\u80FD\u6BD4\u8F83\u5F3A\u5927\u3002"),s("a",g,[n("\u95F4\u8DDD"),t(a)]),n("\uFF0C"),s("a",b,[n("\u5BF9\u9F50"),t(a)]),n("\u90FD\u53EF\u4EE5\u63A7\u5236\uFF0C\u8FD8\u80FD"),s("a",f,[n("\u81EA\u5B9A\u4E49\u683C\u5F0F"),t(a)]),n("\u3002\u66F4\u9AD8\u7EA7\u7684\u7528\u6CD5\u8BF7\u770B"),s("a",_,[n("\u5B98\u65B9\u6587\u6863"),t(a)]),n("\u3002")]),q,s("p",null,[n("\u66F4\u591A\u4FE1\u606F\uFF1A"),s("a",y,[n("\u5B57\u7B26\u4E32 - C# \u7F16\u7A0B\u6307\u5357 | Microsoft Learn"),t(a)])]),w,s("p",null,[n("\u5305\u62EC\u6570\u5B57\u683C\u5F0F\uFF0C\u65E5\u671F\u683C\u5F0F\uFF0C\u81EA\u5B9A\u4E49\u683C\u5F0F\u7B49\u7B49\uFF0C\u8FD9\u91CC\u53EA\u5217\u51FA\u51E0\u79CD\u7528\u6CD5\u793A\u4F8B\uFF0C\u66F4\u591A\u4FE1\u606F\u79FB\u6B65"),s("a",x,[n("\u5B98\u65B9\u6587\u6863"),t(a)]),n("\u3002")]),S])}const W=o(l,[["render",C],["__file","string \u5B57\u7B26\u4E32.html.vue"]]);export{W as default};
