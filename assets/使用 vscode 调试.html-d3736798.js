import{_ as a,Z as e,$ as c,a2 as d}from"./framework-d33190a3.js";const h={},r=d('<h2 id="是否可以使用-watch-来调试-答案是不行。" tabindex="-1"><a class="header-anchor" href="#是否可以使用-watch-来调试-答案是不行。" aria-hidden="true">#</a> 是否可以使用 watch 来调试？答案是不行。</h2><p>按 F5 选择 [.net 5+.net core] vscode 就会自动配置好调试配置。尝试将配置好的 .vscode/launch.json 文件中的 preLaunchTask 值 build 改为 watch，将无法触发断点调试，调试必须在终端运行结束后才开始运行，看来只能使用 build 进行调试。</p><h2 id="满足条件才触发断点" tabindex="-1"><a class="header-anchor" href="#满足条件才触发断点" aria-hidden="true">#</a> 满足条件才触发断点？</h2><p>编辑断点即可，包括表达式和次数，目前消息断点是不可用的</p><h2 id="sharppad-像前端一样调试代码" tabindex="-1"><a class="header-anchor" href="#sharppad-像前端一样调试代码" aria-hidden="true">#</a> SharpPad ，像前端一样调试代码</h2><p>终于可以像浏览器 js console 一样，使用控制台方式调试代码了。</p><p>类似工具：LINQPad</p>',7),t=[r];function s(n,o){return e(),c("div",null,t)}const _=a(h,[["render",s],["__file","使用 vscode 调试.html.vue"]]);export{_ as default};
