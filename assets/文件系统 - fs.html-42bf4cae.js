import{_ as p,Z as c,$ as o,a0 as s,a1 as n,Y as t,a2 as e,E as i}from"./framework-d33190a3.js";const l={},u=e(`<h2 id="文件列表-包括文件夹" tabindex="-1"><a class="header-anchor" href="#文件列表-包括文件夹" aria-hidden="true">#</a> 文件列表(包括文件夹)</h2><h3 id="原生-readdir-只能当前目录-不寻找下级" tabindex="-1"><a class="header-anchor" href="#原生-readdir-只能当前目录-不寻找下级" aria-hidden="true">#</a> 原生 readdir：只能当前目录，不寻找下级</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">let</span> dirList <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span><span class="token string">&#39;./dir&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 返回值示例：</span>
<span class="token comment">// [&quot;.DS_Store&quot;,&quot;Update.exe&quot;,&quot;version&quot;,&quot;views_resources_200_percent.pak&quot;,&quot;xinput1_3.dll&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="读取指定目录下的所有文件-支持过滤" tabindex="-1"><a class="header-anchor" href="#读取指定目录下的所有文件-支持过滤" aria-hidden="true">#</a> 读取指定目录下的所有文件，支持过滤</h3>`,4),r={href:"https://github.com/jergason/recursive-readdir",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/bigstickcarpet/readdir-enhanced",target:"_blank",rel:"noopener noreferrer"},k=e(`<h2 id="判断是不是-文件-目录" tabindex="-1"><a class="header-anchor" href="#判断是不是-文件-目录" aria-hidden="true">#</a> 判断是不是[文件/目录]</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 是不是目录，即路径最终指向的是文件夹</span>
fs<span class="token punctuation">.</span><span class="token function">statSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 是不是文件</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>当然，也可用来判断文件目录是否存在，但不推荐。<strong>判断是否存在，推荐用 <code>fs.access</code></strong></p><p>fs.stat 用来获取文件状态</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*
    读取文件的状态；
    fs.stat(path,callback);
    callback有两个参数；err，stats；stats是一个fs.Stats对象；
    如果发生错误err.code是常见错误之一；
 不建议在调用 fs.open() 、fs.readFile() 或 fs.writeFile() 之前使用 fs.stat() 检查一个文件是否存在。 作为替代，用户代码应该直接打开/读取/写入文件，当文件无效时再处理错误。
 如果要检查一个文件是否存在且不操作它，推荐使用 fs.access()。
 */</span>
fs<span class="token punctuation">.</span><span class="token function">stat</span><span class="token punctuation">(</span><span class="token string">&#39;./wenjian.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> stats</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">)</span>
  <span class="token comment">//    获取文件的大小；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>size<span class="token punctuation">)</span>
  <span class="token comment">//    获取文件最后一次访问的时间；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>atime<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">//    文件创建的时间；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>birthtime<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">//    文件最后一次修改时间；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>mtime<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">//    状态发生变化的时间；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span>ctime<span class="token punctuation">.</span><span class="token function">toLocaleString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">//判断是否是目录；是返回true；不是返回false；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">isFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token comment">//    判断是否是文件；是返回true、不是返回false；</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>stats<span class="token punctuation">.</span><span class="token function">isDirectory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// ---------------------</span>
<span class="token comment">// 作者：sunlizhen</span>
<span class="token comment">// 来源：CSDN</span>
<span class="token comment">// 原文：https://blog.csdn.net/sunlizhen/article/details/78016202</span>
<span class="token comment">// 版权声明：本文为博主原创文章，转载请附上博文链接！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="判断-文件-目录-是否存在-fs-access-path-mode-callback" tabindex="-1"><a class="header-anchor" href="#判断-文件-目录-是否存在-fs-access-path-mode-callback" aria-hidden="true">#</a> 判断[文件/目录]是否存在 - fs.access(path[, mode], callback)</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">/*
-----判断文件和目录是否存在；
fs.access(path[, mode], callback);
path:判断的文件名；
callback：回调函数；
 */</span>
fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">&#39;./wenjian.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//    文件和目录不存在的情况下；</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token string">&#39;ENOENT&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;文件和目录不存在&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">/*
 不建议在调用 fs.open() 、 fs.readFile() 或 fs.writeFile() 之前使用 fs.access() 检查一个文件的可访问性
 */</span>
<span class="token comment">//不建议使用：</span>
fs<span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token string">&#39;./wenjian.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;文件已经存在&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./wenjian.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">//推荐使用；</span>
fs<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;./wenjian.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> fd</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  cnsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token comment">// ---------------------</span>
<span class="token comment">// 作者：sunlizhen</span>
<span class="token comment">// 来源：CSDN</span>
<span class="token comment">// 原文：https://blog.csdn.net/sunlizhen/article/details/78016157</span>
<span class="token comment">// 版权声明：本文为博主原创文章，转载请附上博文链接！</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="判断-文件-目录-是否存在-fs-exists-弃用" tabindex="-1"><a class="header-anchor" href="#判断-文件-目录-是否存在-fs-exists-弃用" aria-hidden="true">#</a> 判断[文件/目录]是否存在 - fs.exists(弃用)</h2><p><code>fs.exists(path)</code> <strong>nodejs 9.0 弃用</strong></p><p>对应的同步方法 <code>fs.existsSync(path)</code> ，这个还可以用</p><h2 id="读取文件-fs-readfile" tabindex="-1"><a class="header-anchor" href="#读取文件-fs-readfile" aria-hidden="true">#</a> 读取文件 fs.readFile</h2><p>读取不存在文件会报错</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>file<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>file<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token comment">// 默认获取二进制数据。参数设置为utf8将获取文本数据</span>
fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;note_data/index.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">// 同步</span>
<span class="token keyword">let</span> data <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;note_data/index.html&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="改名-文件名-目录名" tabindex="-1"><a class="header-anchor" href="#改名-文件名-目录名" aria-hidden="true">#</a> 改名(文件名，目录名)</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>oldPath<span class="token punctuation">,</span> newPath<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
fs<span class="token punctuation">.</span><span class="token function">renameSync</span><span class="token punctuation">(</span>oldPath<span class="token punctuation">,</span> newPath<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>oldPath, newPath 必须相同级数，可以完全一样，只能修改末级</p><h2 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h2><h3 id="标准删" tabindex="-1"><a class="header-anchor" href="#标准删" aria-hidden="true">#</a> 标准删</h3><p>只能删除文件</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
fs<span class="token punctuation">.</span><span class="token function">unlinkSync</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span><span class="token string">&#39;/tmp/hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;successfully deleted /tmp/hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只能删除空目录</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>fs.rmdir(path, callback)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="递归删-第三方扩展" tabindex="-1"><a class="header-anchor" href="#递归删-第三方扩展" aria-hidden="true">#</a> 递归删：第三方扩展</h3><p>删除指定目录下的所有文件和目录</p>`,26),v={href:"https://github.com/jprichardson/node-fs-extra",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/isaacs/rimraf",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/jprichardson/node-fs-extra/blob/master/docs/remove-sync.md",target:"_blank",rel:"noopener noreferrer"},b=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// remove file</span>
fs<span class="token punctuation">.</span><span class="token function">removeSync</span><span class="token punctuation">(</span><span class="token string">&#39;/tmp/myfile&#39;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">removeSync</span><span class="token punctuation">(</span><span class="token string">&#39;/home/jprichardson&#39;</span><span class="token punctuation">)</span> <span class="token comment">// I just deleted my entire HOME directory.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建目录" tabindex="-1"><a class="header-anchor" href="#创建目录" aria-hidden="true">#</a> 创建目录</h2><p>fs.mkdir(path[, mode], callback)<br> fs.mkdirSync(path[, mode])</p><p>只能在已存在的目录下创建，越级创建将报错</p><h2 id="写-创建-文件" tabindex="-1"><a class="header-anchor" href="#写-创建-文件" aria-hidden="true">#</a> 写/创建 文件</h2><ul><li>将内容写入文件。</li><li>有文件将直接替换现有内容，没有将创建新的并写入。</li><li>路径不存在将无法写入</li></ul><p>语法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">,</span> callback<span class="token punctuation">)</span>
fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> data<span class="token punctuation">[</span><span class="token punctuation">,</span> options<span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>例子</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span><span class="token string">&#39;note_data/hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;File write completed&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;note_data/hello.txt&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;hello&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;utf8&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),h={href:"https://github.com/jprichardson/node-fs-extra/blob/master/docs/outputFile-sync.md",target:"_blank",rel:"noopener noreferrer"},g={href:"https://github.com/jprichardson/node-fs-extra/blob/master/docs/outputJson-sync.md",target:"_blank",rel:"noopener noreferrer"},y=e(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">outputJsonSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>outputPath<span class="token punctuation">,</span> <span class="token string">&#39;data-demo-list.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> worksList<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="copy" tabindex="-1"><a class="header-anchor" href="#copy" aria-hidden="true">#</a> copy</h2>`,2),x={href:"https://github.com/jprichardson/node-fs-extra",target:"_blank",rel:"noopener noreferrer"},_={href:"https://github.com/jprichardson/node-fs-extra/blob/master/docs/copy.md",target:"_blank",rel:"noopener noreferrer"},j={href:"https://github.com/jprichardson/node-fs-extra/blob/master/docs/copy-sync.md",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>copySync 示例</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// copy file</span>
fs<span class="token punctuation">.</span><span class="token function">copySync</span><span class="token punctuation">(</span><span class="token string">&#39;/tmp/myfile&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/tmp/mynewfile&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// copy directory, even if it has subdirectories or files</span>
fs<span class="token punctuation">.</span><span class="token function">copySync</span><span class="token punctuation">(</span><span class="token string">&#39;/tmp/mydir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/tmp/mynewdir&#39;</span><span class="token punctuation">)</span>

<span class="token comment">// 支持过滤</span>
<span class="token keyword">const</span> <span class="token function-variable function">filterFunc</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">src<span class="token punctuation">,</span> dest</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// your logic here</span>
  <span class="token comment">// it will be copied if return true</span>
<span class="token punctuation">}</span>
fs<span class="token punctuation">.</span><span class="token function">copySync</span><span class="token punctuation">(</span><span class="token string">&#39;/tmp/mydir&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;/tmp/mynewdir&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">filter</span><span class="token operator">:</span> filterFunc <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="应用" tabindex="-1"><a class="header-anchor" href="#应用" aria-hidden="true">#</a> 应用</h2><h3 id="创建一个空白的二进制文件" tabindex="-1"><a class="header-anchor" href="#创建一个空白的二进制文件" aria-hidden="true">#</a> 创建一个空白的二进制文件</h3><blockquote><p>由于当时没有备注， 已经不记得具体用在什么场景了</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs-extra&#39;</span><span class="token punctuation">)</span>
fs<span class="token punctuation">.</span><span class="token function">outputFileSync</span><span class="token punctuation">(</span><span class="token string">&#39;d:/blank-file&#39;</span><span class="token punctuation">,</span> Buffer<span class="token punctuation">.</span><span class="token function">alloc</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,6);function S(F,q){const a=i("ExternalLinkIcon");return c(),o("div",null,[u,s("p",null,[n("使用 "),s("a",r,[n("recursive-readdir"),t(a)]),n("，但不会列出文件夹")]),s("p",null,[n("需列出文件夹使用："),s("a",d,[n("readdir-enhanced"),t(a)])]),k,s("p",null,[n("使用 "),s("a",v,[n("fs-extra"),t(a)]),n(" ，或者使用 "),s("a",m,[n("rimraf"),t(a)])]),s("p",null,[n("fs-extra 的 "),s("a",f,[n("remove-sync"),t(a)]),n(" 示例")]),b,s("p",null,[n("或直接使用 fs-extra 的 "),s("a",h,[n("outputFileSync"),t(a)]),n("、"),s("a",g,[n("outputJsonSync"),t(a)]),n("，路径不存在也能进行写入")]),y,s("p",null,[n("使用 "),s("a",x,[n("fs-extra"),t(a)])]),s("p",null,[s("a",_,[n("copy 文档"),t(a)])]),s("p",null,[s("a",j,[n("copySync 文档"),t(a)])]),w])}const N=p(l,[["render",S],["__file","文件系统 - fs.html.vue"]]);export{N as default};
