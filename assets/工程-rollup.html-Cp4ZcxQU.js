import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{a as l,e,o as n}from"./app-CrKO-FBb.js";const a={};function p(t,i){return n(),l("div",null,i[0]||(i[0]=[e(`<h2 id="只能使用-import-导入模块-但可通过插件改变" tabindex="-1"><a class="header-anchor" href="#只能使用-import-导入模块-但可通过插件改变"><span>只能使用 import 导入模块，但可通过插件改变</span></a></h2><p>通过 rollup-plugin-commonjs 插件使支持 require 模块</p><h2 id="外部模块不会解析成es5" tabindex="-1"><a class="header-anchor" href="#外部模块不会解析成es5"><span>外部模块不会解析成es5</span></a></h2><p>需借用 <a href="#rollup-plugin-babel">rollup-plugin-babel</a> 插件</p><h2 id="插件" tabindex="-1"><a class="header-anchor" href="#插件"><span>插件</span></a></h2><h3 id="rollup-plugin-node-resolve-打包外部模块" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-node-resolve-打包外部模块"><span>rollup-plugin-node-resolve 打包外部模块</span></a></h3><p>允许将外部模块编译进来，比如把 node_modules 中的模块。当然，也可以自定义的模块。<br> 只需指定一个文件夹名称，似乎会寻找硬盘的所有位置，很强大（指定路径将无效）</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">plugins</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">  resolve</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    customResolveOptions</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      moduleDirectory</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;node_modules&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;github&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rollup-plugin-commonjs" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-commonjs"><span>rollup-plugin-commonjs</span></a></h3><p>使支持 require 模块。否则只能 import 模块</p><h3 id="rollup-plugin-babel" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-babel"><span>rollup-plugin-babel</span></a></h3><p>解析成es5代码。目前所知，必须使用<code>.babelrc</code>配置文件</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    plugins</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        babel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">            // 使用数组，排除多个目录或文件</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">            exclude</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;node_modules/**&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;./src/katex.min.js&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        })</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="rollup-plugin-uglify" tabindex="-1"><a class="header-anchor" href="#rollup-plugin-uglify"><span>rollup-plugin-uglify</span></a></h3><p>代码压缩</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#986801;--shiki-dark:#E5C07B;"> uglify</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;rollup-plugin-uglify&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    plugins</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> [</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">        uglify</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    ]</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="rollup-config" tabindex="-1"><a class="header-anchor" href="#rollup-config"><span>rollup.config</span></a></h2><p>目前常用：</p><ul><li><code>cjs</code>: 打包成nodejs模块</li><li><code>iife</code>: <ul><li>构建成可通过 <code>&amp;lt;script&amp;gt;</code> 标签使用的js。</li><li>不能直接构建导出的模块</li></ul></li><li><code>umd</code>: <ul><li>browser(AMD+全局) + nodejs</li><li>需与moduleName选项一起使用</li><li>可直接构建模块</li></ul></li></ul><h2 id="加-banner-注释" tabindex="-1"><a class="header-anchor" href="#加-banner-注释"><span>加 banner 注释</span></a></h2><p>需自己拼</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>// generate code and a sourcemap</span></span>
<span class="line"><span>const { code, map } = await bundle.generate(outputOptions);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,22)]))}const d=s(a,[["render",p],["__file","工程-rollup.html.vue"]]),o=JSON.parse('{"path":"/old__/%E5%B7%A5%E7%A8%8B-rollup.html","title":"","lang":"zh-CN","frontmatter":{"description":"只能使用 import 导入模块，但可通过插件改变 通过 rollup-plugin-commonjs 插件使支持 require 模块 外部模块不会解析成es5 需借用 rollup-plugin-babel 插件 插件 rollup-plugin-node-resolve 打包外部模块 允许将外部模块编译进来，比如把 node_modules 中的...","head":[["meta",{"property":"og:url","content":"http://docs.cqlql.top/old__/%E5%B7%A5%E7%A8%8B-rollup.html"}],["meta",{"property":"og:site_name","content":"开发笔记"}],["meta",{"property":"og:description","content":"只能使用 import 导入模块，但可通过插件改变 通过 rollup-plugin-commonjs 插件使支持 require 模块 外部模块不会解析成es5 需借用 rollup-plugin-babel 插件 插件 rollup-plugin-node-resolve 打包外部模块 允许将外部模块编译进来，比如把 node_modules 中的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T02:50:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T02:50:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T02:50:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"桥黎\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"只能使用 import 导入模块，但可通过插件改变","slug":"只能使用-import-导入模块-但可通过插件改变","link":"#只能使用-import-导入模块-但可通过插件改变","children":[]},{"level":2,"title":"外部模块不会解析成es5","slug":"外部模块不会解析成es5","link":"#外部模块不会解析成es5","children":[]},{"level":2,"title":"插件","slug":"插件","link":"#插件","children":[{"level":3,"title":"rollup-plugin-node-resolve 打包外部模块","slug":"rollup-plugin-node-resolve-打包外部模块","link":"#rollup-plugin-node-resolve-打包外部模块","children":[]},{"level":3,"title":"rollup-plugin-commonjs","slug":"rollup-plugin-commonjs","link":"#rollup-plugin-commonjs","children":[]},{"level":3,"title":"rollup-plugin-babel","slug":"rollup-plugin-babel","link":"#rollup-plugin-babel","children":[]},{"level":3,"title":"rollup-plugin-uglify","slug":"rollup-plugin-uglify","link":"#rollup-plugin-uglify","children":[]}]},{"level":2,"title":"rollup.config","slug":"rollup-config","link":"#rollup-config","children":[]},{"level":2,"title":"加 banner 注释","slug":"加-banner-注释","link":"#加-banner-注释","children":[]}],"git":{"createdTime":1652927496000,"updatedTime":1730083825000,"contributors":[{"name":"陈桥黎","email":"cql.ql@qq.com","commits":1}]},"readingTime":{"minutes":0.97,"words":292},"filePathRelative":"__old__/工程-rollup.md","localizedDate":"2022年5月19日","autoDesc":true,"excerpt":"<h2>只能使用 import 导入模块，但可通过插件改变</h2>\\n<p>通过 rollup-plugin-commonjs 插件使支持 require 模块</p>\\n<h2>外部模块不会解析成es5</h2>\\n<p>需借用 <a href=\\"#rollup-plugin-babel\\">rollup-plugin-babel</a> 插件</p>\\n<h2>插件</h2>\\n<h3>rollup-plugin-node-resolve 打包外部模块</h3>\\n<p>允许将外部模块编译进来，比如把 node_modules 中的模块。当然，也可以自定义的模块。<br>\\n只需指定一个文件夹名称，似乎会寻找硬盘的所有位置，很强大（指定路径将无效）</p>"}');export{d as comp,o as data};
