import{_ as p,Z as o,$ as i,a0 as n,a1 as s,Y as e,a2 as t,E as c}from"./framework-d33190a3.js";const r={},l=t('<ul><li><a href="#node-portfinder-%E8%87%AA%E5%8A%A8%E8%8E%B7%E5%8F%96%E5%8F%AF%E7%94%A8%E7%AB%AF%E5%8F%A3">node-portfinder 自动获取可用端口</a></li><li><a href="#%E8%8E%B7%E5%8F%96%E6%9C%AC%E6%9C%BA-ip-%E5%9C%B0%E5%9D%80">获取本机 ip 地址</a><ul><li><a href="#1-node-ip">1. node-ip</a></li><li><a href="#2-address">2. address</a></li><li><a href="#3-%E8%87%AA%E5%B7%B1%E5%AE%9E%E7%8E%B0">3. 自己实现</a></li></ul></li><li><a href="#cli-%E5%8F%82%E6%95%B0%E8%8E%B7%E5%8F%96">cli 参数获取</a></li><li><a href="#%E7%BB%88%E7%AB%AF%E7%9B%B8%E5%85%B3">终端相关</a><ul><li><a href="#%E5%8A%A0%E8%BD%BD%E6%8C%87%E7%A4%BA%E5%9B%BE%E6%A0%87%E5%8A%A8%E7%94%BB">加载指示图标动画</a></li><li><a href="#%E8%BE%93%E5%87%BA%E6%96%87%E6%9C%AC%E6%A0%B7%E5%BC%8F%E9%A2%9C%E8%89%B2%E6%8E%A7%E5%88%B6">输出文本样式颜色控制</a></li></ul></li><li><a href="#node-notifier">node-notifier</a></li><li><a href="#opn-%E6%89%93%E5%BC%80%E5%85%B6%E4%BB%96%E7%A8%8B%E5%BA%8F">opn 打开其他程序</a></li><li><a href="#chokidar">chokidar</a></li><li><a href="#nodemon">nodemon</a></li></ul><h2 id="node-portfinder-自动获取可用端口" tabindex="-1"><a class="header-anchor" href="#node-portfinder-自动获取可用端口" aria-hidden="true">#</a> node-portfinder 自动获取可用端口</h2>',2),d={href:"https://github.com/indexzero/node-portfinder",target:"_blank",rel:"noopener noreferrer"},u=t(`<h2 id="获取本机-ip-地址" tabindex="-1"><a class="header-anchor" href="#获取本机-ip-地址" aria-hidden="true">#</a> 获取本机 ip 地址</h2><p>找到两个模块</p><h3 id="_1-node-ip" tabindex="-1"><a class="header-anchor" href="#_1-node-ip" aria-hidden="true">#</a> 1. node-ip</h3><p>webpack-dev-server 在用</p><p>https://github.com/indutny/node-ip</p><p>安装</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>npm install ip
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;ip&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">address</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// 可局域网访问的本机ip</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-address" tabindex="-1"><a class="header-anchor" href="#_2-address" aria-hidden="true">#</a> 2. address</h3><p>vue cli 环境在用</p><p>https://github.com/node-modules/address</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> address <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;address&#39;</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>address<span class="token punctuation">.</span><span class="token function">ip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3-自己实现" tabindex="-1"><a class="header-anchor" href="#_3-自己实现" aria-hidden="true">#</a> 3. 自己实现</h3><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getIPAdress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> interfaces <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;os&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">networkInterfaces</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> devName <span class="token keyword">in</span> interfaces<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> iface <span class="token operator">=</span> interfaces<span class="token punctuation">[</span>devName<span class="token punctuation">]</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> iface<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> alias <span class="token operator">=</span> iface<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>alias<span class="token punctuation">.</span>family <span class="token operator">===</span> <span class="token string">&#39;IPv4&#39;</span> <span class="token operator">&amp;&amp;</span> alias<span class="token punctuation">.</span>address <span class="token operator">!==</span> <span class="token string">&#39;127.0.0.1&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>alias<span class="token punctuation">.</span>internal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> alias<span class="token punctuation">.</span>address
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cli-参数获取" tabindex="-1"><a class="header-anchor" href="#cli-参数获取" aria-hidden="true">#</a> cli 参数获取</h2>`,16),k={href:"https://github.com/yargs/yargs",target:"_blank",rel:"noopener noreferrer"},h=t(`<div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> argv <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;yargs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>argv
<span class="token keyword">const</span> isTest <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token string">&#39;test&#39;</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token boolean">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="终端相关" tabindex="-1"><a class="header-anchor" href="#终端相关" aria-hidden="true">#</a> 终端相关</h2><h3 id="加载指示图标动画" tabindex="-1"><a class="header-anchor" href="#加载指示图标动画" aria-hidden="true">#</a> 加载指示图标动画</h3><p>https://github.com/sindresorhus/ora</p><h3 id="输出文本样式颜色控制" tabindex="-1"><a class="header-anchor" href="#输出文本样式颜色控制" aria-hidden="true">#</a> 输出文本样式颜色控制</h3><p>https://github.com/chalk/chalk</p><h2 id="node-notifier" tabindex="-1"><a class="header-anchor" href="#node-notifier" aria-hidden="true">#</a> node-notifier</h2><p>似乎可以控制 vscode 弹消息框</p><h2 id="opn-打开其他程序" tabindex="-1"><a class="header-anchor" href="#opn-打开其他程序" aria-hidden="true">#</a> opn 打开其他程序</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> opn <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;opn&#39;</span><span class="token punctuation">)</span>
<span class="token function">opn</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">http://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>port<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">app</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;chrome&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="chokidar" tabindex="-1"><a class="header-anchor" href="#chokidar" aria-hidden="true">#</a> chokidar</h2><p>https://github.com/paulmillr/chokidar</p><p>基于 node.JS 的监听文件夹改变模块</p><p>一般前端环境框架直接有依赖安装</p><h2 id="nodemon" tabindex="-1"><a class="header-anchor" href="#nodemon" aria-hidden="true">#</a> nodemon</h2><p>实现监听文件改变，并自动重启 nodejs 服务</p><p>全局安装</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-g</span> nodemon
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>nodemon ./server.js <span class="token number">8080</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,20),v={href:"https://nodemon.io",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/remy/nodemon",target:"_blank",rel:"noopener noreferrer"};function f(b,g){const a=c("ExternalLinkIcon");return o(),i("div",null,[l,n("p",null,[n("a",d,[s("node-portfinder"),e(a)])]),u,n("p",null,[n("a",k,[s("yargs 文档"),e(a)])]),h,n("p",null,[n("a",v,[s("nodemon 官网"),e(a)])]),n("p",null,[n("a",m,[s("nodemon github"),e(a)])])])}const _=p(r,[["render",f],["__file","node 实用模块.html.vue"]]);export{_ as default};
