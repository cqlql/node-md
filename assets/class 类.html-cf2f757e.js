const t=JSON.parse('{"key":"v-0179be8f","path":"/DotNet-C_/class%20%E7%B1%BB.html","title":"","lang":"zh-CN","frontmatter":{"description":"类基本定义与使用 静态类 1. 相当于全局对象，一直存在内存中。 2. 仅包含静态成员。 3. 无法实例化。 4. 只能包含静态构造函数，并且在成员被访问后执行。 5. 密封性，无法被继承。 6. 不建议使用静态类，能不用就不用。 静态成员 我的理解： 1. 所有实例的共享成员，公共成员。 2. 不用实例化，跟类是否实例化没有关系。 3. 可直接通过类...","head":[["meta",{"property":"og:url","content":"http://docs.cqlql.top/DotNet-C_/class%20%E7%B1%BB.html"}],["meta",{"property":"og:site_name","content":"开发笔记"}],["meta",{"property":"og:description","content":"类基本定义与使用 静态类 1. 相当于全局对象，一直存在内存中。 2. 仅包含静态成员。 3. 无法实例化。 4. 只能包含静态构造函数，并且在成员被访问后执行。 5. 密封性，无法被继承。 6. 不建议使用静态类，能不用就不用。 静态成员 我的理解： 1. 所有实例的共享成员，公共成员。 2. 不用实例化，跟类是否实例化没有关系。 3. 可直接通过类..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-07-21T00:06:03.000Z"}],["meta",{"property":"article:author","content":"Mr.Joly"}],["meta",{"property":"article:modified_time","content":"2023-07-21T00:06:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-07-21T00:06:03.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Joly\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"类基本定义与使用","slug":"类基本定义与使用","link":"#类基本定义与使用","children":[]},{"level":2,"title":"静态类","slug":"静态类","link":"#静态类","children":[]},{"level":2,"title":"静态成员","slug":"静态成员","link":"#静态成员","children":[]}],"git":{"createdTime":1689897963000,"updatedTime":1689897963000,"contributors":[{"name":"陈桥黎","email":"cql.ql@qq.com","commits":1}]},"readingTime":{"minutes":1.15,"words":345},"filePathRelative":"DotNet-C#/class 类.md","localizedDate":"2023年7月21日","autoDesc":true}');export{t as data};
