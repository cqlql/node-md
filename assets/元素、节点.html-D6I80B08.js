import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{a,e as n,o as e}from"./app-B9WJV81J.js";const l={};function t(h,i){return e(),a("div",null,i[0]||(i[0]=[n(`<ul><li><a href="#%E5%85%83%E7%B4%A0%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA">元素对象创建</a></li><li><a href="#%E8%8A%82%E7%82%B9%E6%9B%BF%E6%8D%A2%E9%80%82%E7%94%A8%E5%85%83%E7%B4%A0">节点替换(适用元素)</a><ul><li><a href="#%E5%AD%90%E8%8A%82%E7%82%B9%E6%9B%BF%E6%8D%A2">子节点替换</a><ul><li><a href="#%E8%AF%AD%E6%B3%95">语法</a></li><li><a href="#%E4%BE%8B%E5%AD%90">例子</a></li><li><a href="#%E5%85%BC%E5%AE%B9%E6%80%A7">兼容性</a></li></ul></li></ul></li><li><a href="#%E8%8A%82%E7%82%B9%E5%A2%9E%E5%8A%A0">节点增加</a><ul><li><a href="#%E6%9C%AB%E5%B0%BE%E8%BF%BD%E5%8A%A0%E5%AD%90%E8%8A%82%E7%82%B9%E9%80%82%E7%94%A8%E5%85%83%E7%B4%A0">末尾追加子节点(适用元素)</a></li><li><a href="#%E5%85%83%E7%B4%A0%E5%86%85%E9%83%A8%E5%A2%9E%E5%8A%A0-insertbefore">元素内部增加 insertBefore</a></li></ul></li><li><a href="#%E5%85%83%E7%B4%A0%E5%A2%9E%E5%8A%A0">元素增加</a><ul><li><a href="#%E5%A2%9E%E5%8A%A0-html-%E6%96%87%E6%9C%AC---insertadjacenthtml">增加 html 文本 - insertAdjacentHTML</a></li><li><a href="#%E5%A2%9E%E5%8A%A0%E5%85%83%E7%B4%A0---insertadjacentelement">增加元素 - insertAdjacentElement</a></li></ul></li><li><a href="#%E8%8A%82%E7%82%B9%E5%85%8B%E9%9A%86%E5%A4%8D%E5%88%B6%E9%80%82%E7%94%A8%E5%85%83%E7%B4%A0">节点克隆/复制(适用元素)</a></li><li><a href="#%E8%AF%86%E5%88%AB%E6%96%87%E6%A1%A3%E4%B8%AD%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%85%83%E7%B4%A0">识别文档中不存在元素</a></li><li><a href="#%E5%85%83%E7%B4%A0%E6%A0%87%E7%AD%BE%E6%96%87%E6%9C%AC%E6%93%8D%E4%BD%9C">元素标签文本操作</a><ul><li><a href="#innertext">innerText</a></li><li><a href="#textcontent">textContent</a></li><li><a href="#innerhtml">innerHTML</a></li><li><a href="#outerhtml">outerHTML</a></li><li><a href="#textcontent-%E4%B8%8E-innertext-%E5%8C%BA%E5%88%AB">textContent 与 innerText 区别</a></li><li><a href="#%E6%80%BB%E7%BB%93">总结</a></li></ul></li><li><a href="#%E5%85%83%E7%B4%A0%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C">元素标签属性操作</a><ul><li><a href="#%E9%80%9A%E7%94%A8%E5%85%A8%E8%83%BD%E6%93%8D%E4%BD%9C">通用全能操作</a></li><li><a href="#%E9%83%A8%E5%88%86%E7%9B%B4%E6%8E%A5-js-%E6%93%8D%E4%BD%9C">部分直接 js 操作</a><ul><li><a href="#name-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7----%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E7%8B%AC%E6%9C%89">name 标签属性 -- 表单元素独有</a></li><li><a href="#class-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7----%E9%80%9A%E8%BF%87-classname-%E8%AF%BB%E5%86%99">class 标签属性 -- 通过 className 读写</a></li><li><a href="#id-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7">id 标签属性</a></li></ul></li></ul></li><li><a href="#%E5%A4%9A%E4%B8%AA%E8%8A%82%E7%82%B9%E5%A2%9E%E5%8A%A0%E6%95%88%E7%8E%87%E5%86%99%E6%B3%95-%E6%96%87%E6%A1%A3%E7%A2%8E%E7%89%87">多个节点增加效率写法-文档碎片</a></li></ul><h2 id="元素对象创建" tabindex="-1"><a class="header-anchor" href="#元素对象创建"><span>元素对象创建</span></a></h2><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 通用</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> div1</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;div&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 部分元素独有</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> img</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> Image</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// img 元素</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="节点替换-适用元素" tabindex="-1"><a class="header-anchor" href="#节点替换-适用元素"><span>节点替换(适用元素)</span></a></h2><p><strong>兼容性</strong>：ie5+，其他高级</p><h3 id="子节点替换" tabindex="-1"><a class="header-anchor" href="#子节点替换"><span>子节点替换</span></a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/replaceChild" target="_blank" rel="noopener noreferrer">replaceChild 文档</a></p><h4 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h4><p><code>replacedNode = parentNode.replaceChild(newChild, oldChild);</code></p><p>replacedNode 和oldChild相等。</p><p><strong>参数</strong></p><ul><li><strong>newChild</strong><br> 替换oldChild的元素，可以是新建的，也可以是文档中现有的</li><li><strong>oldChild</strong></li></ul><h4 id="例子" tabindex="-1"><a class="header-anchor" href="#例子"><span>例子</span></a></h4><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elemCont</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">replaceChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">elzBox</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elemCont</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">firstElementChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="兼容性" tabindex="-1"><a class="header-anchor" href="#兼容性"><span>兼容性</span></a></h4><p>ie6+</p><h2 id="节点增加" tabindex="-1"><a class="header-anchor" href="#节点增加"><span>节点增加</span></a></h2><h3 id="末尾追加子节点-适用元素" tabindex="-1"><a class="header-anchor" href="#末尾追加子节点-适用元素"><span>末尾追加子节点(适用元素)</span></a></h3><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">elem2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>兼容性：包括ie6的所有</p><h3 id="元素内部增加-insertbefore" tabindex="-1"><a class="header-anchor" href="#元素内部增加-insertbefore"><span>元素内部增加 insertBefore</span></a></h3><p>目标节点内部，目标节点的后代节点前面</p><p>参数</p><ul><li>参数1 要添加节点/元素</li><li>参数2 后代节点/元素</li></ul><p>兼容性：包括ie6的所有</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insertBefore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">newElem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">childElem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="元素增加" tabindex="-1"><a class="header-anchor" href="#元素增加"><span>元素增加</span></a></h2><h3 id="增加-html-文本-insertadjacenthtml" tabindex="-1"><a class="header-anchor" href="#增加-html-文本-insertadjacenthtml"><span>增加 html 文本 - insertAdjacentHTML</span></a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/insertAdjacentHTML" target="_blank" rel="noopener noreferrer">文档很详细</a></p><p>element.insertAdjacentHTML(position, text);</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- beforebegin --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- afterbegin --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">foo</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- beforeend --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- afterend --&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="增加元素-insertadjacentelement" tabindex="-1"><a class="header-anchor" href="#增加元素-insertadjacentelement"><span>增加元素 - insertAdjacentElement</span></a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Element/insertAdjacentElement" target="_blank" rel="noopener noreferrer">文档很详细</a></p><p>element.insertAdjacentElement(position, element);</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" data-title="html" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- beforebegin --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- afterbegin --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">foo</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- beforeend --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- afterend --&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="节点克隆-复制-适用元素" tabindex="-1"><a class="header-anchor" href="#节点克隆-复制-适用元素"><span>节点克隆/复制(适用元素)</span></a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Node/cloneNode" target="_blank" rel="noopener noreferrer">MDN 文档，很详细</a></p><p><strong>语法</strong>：<br><code>var dupNode = node.cloneNode(deep);</code></p><p><strong>参数</strong>：</p><ul><li><strong>deep</strong><br> 是否采用深度克隆,如果为true,则该节点的所有后代节点也都会被克隆,如果为false,则只克隆该节点本身.</li></ul><p><strong>兼容性</strong>：ie5+，其他高级</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> eUl</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementsByTagName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;ul&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)[</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> dupNode</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> eUl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">cloneNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 进行深度克隆</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">insertBefore</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">dupNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">eUl</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="识别文档中不存在元素" tabindex="-1"><a class="header-anchor" href="#识别文档中不存在元素"><span>识别文档中不存在元素</span></a></h2><p>即：通过innerHTML删除的元素。或者，createElement 创建后还未加入页面中的元素</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// baseURI 为当前页面url</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// offsetParent 为定位参照元素</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 如果不存在</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// baseURI 为空字符串</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">baseURI</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // &#39;&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// offsetParent 为 null</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">offsetParent</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // null</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="元素标签文本操作" tabindex="-1"><a class="header-anchor" href="#元素标签文本操作"><span>元素标签文本操作</span></a></h2><h3 id="innertext" tabindex="-1"><a class="header-anchor" href="#innertext"><span>innerText</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>描述：</span></span>
<span class="line"><span>取解析后的文本格式，即最终被显示的文本格式</span></span>
<span class="line"><span></span></span>
<span class="line"><span>兼容性：</span></span>
<span class="line"><span>ie(包括edge)，chrome：</span></span>
<span class="line"><span>会转换元素，但不会保留文本换行，单个或连续的多个 换行、空格都将会转为单个空格。</span></span>
<span class="line"><span>就如描述说的那样，页面实际显示成什么样子，取到的文本格式就是什么样子</span></span>
<span class="line"><span>（关于转换元素：比如p元素会转为换行）</span></span>
<span class="line"><span>firefox：</span></span>
<span class="line"><span>42版也不支持</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="textcontent" tabindex="-1"><a class="header-anchor" href="#textcontent"><span>textContent</span></a></h3><p>不会转换元素，但会保留文本换行，多个连续换行\\空格都会被保留<br> 相当于去标签版的innerHTML</p><p>兼容性：ie678不支持</p><h3 id="innerhtml" tabindex="-1"><a class="header-anchor" href="#innerhtml"><span>innerHTML</span></a></h3><p>描述：<br> 按当时书写原始格式原封不动的输出来</p><p>ie678 特殊性：<br> 不保留原始格式，保留带标签的解析后的文本格式。也就是本质还是innerText，只是这次保留了标签</p><p>ie6/7/8/9 bug：<br> 设置祖先的innerHTML属性时，会将设置前缓存的后代元素innerHTML属性设置为空字符串</p><h3 id="outerhtml" tabindex="-1"><a class="header-anchor" href="#outerhtml"><span>outerHTML</span></a></h3><p>包含当前元素本身的html文本，格式与innerHTML一样。也具有ie678 innerHTML属性的特殊性<br> 兼容性：包括ie6的所有</p><h3 id="textcontent-与-innertext-区别" tabindex="-1"><a class="header-anchor" href="#textcontent-与-innertext-区别"><span>textContent 与 innerText 区别</span></a></h3><p><strong>换行符 (\\n)</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">textContent</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> word!&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// \\n 依然是空格</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">innerText</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;hello </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> word!&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> // \\n 能够转成 &lt;br/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>textContent 居然只能单向</strong><br> 也就是说，获取操作可以从html 转成 text，设置操作不能将text转成html<br> html 转成 text指的是：块元素或者br等转成 \\r\\n<br> text无法转成html指的是：\\r\\n 无法被转成 块元素了</p><p><strong>innerText 可以双向</strong>，兼容：ie方面，包括ie6的所有。chrome。firefox目前也已经支持</p><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><p>不管是innerText或innerHTML， ie678 只会返回解析后的文本。所以，无法做到与textContent 等同，<br> 甚至没法做到与高级浏览器innerHTML等同</p><h2 id="元素标签属性操作" tabindex="-1"><a class="header-anchor" href="#元素标签属性操作"><span>元素标签属性操作</span></a></h2><h3 id="通用全能操作" tabindex="-1"><a class="header-anchor" href="#通用全能操作"><span>通用全能操作</span></a></h3><p>获取</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 属性值读取方式1</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> </span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 根据 指定属性名 获取——getAttribute方法</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 这里讲的获取方式是：通过 [元素节点]对象的getAttribute方法 获取</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 没有此属性情况 返回null</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> 兼容性：ie6部分属性依然无法获取，像class属性，即使有设置，获取的竟然是null。其他浏览器正常</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> */</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//没有此属性情况 返回null</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> attrValue</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> div2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;class&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/*</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">属性值读取方式2：通过属性的对象形式，nodeValue</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">此方式还可直接进行设置</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">兼容性：所有浏览器兼容</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">*/</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>设置</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">script</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;class&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ie6+ 支持</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ie67 不支持这样设置css， elem.setAttribute(&#39;style&#39;,&#39;background:#333&#39;);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>删除</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">div2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;class&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="部分直接-js-操作" tabindex="-1"><a class="header-anchor" href="#部分直接-js-操作"><span>部分直接 js 操作</span></a></h3><h4 id="name-标签属性-表单元素独有" tabindex="-1"><a class="header-anchor" href="#name-标签属性-表单元素独有"><span>name 标签属性 -- 表单元素独有</span></a></h4><p>可读写</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getElementById</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;pwd&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">).</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">name</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;password&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>真正拥有name属性的元素：</strong><br> 目前知道的有 所有的input元素、img元素。即使你不为这些元素的name属性给值，通过js获取的是 空字符串。</p><p><strong>没有name属性的元素却强制给了name属性：</strong><br> 通过对象的name属性 将获取到undefined。但ie6可以获取成功</p><h4 id="class-标签属性-通过-classname-读写" tabindex="-1"><a class="header-anchor" href="#class-标签属性-通过-classname-读写"><span>class 标签属性 -- 通过 className 读写</span></a></h4><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">className</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;main&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="id-标签属性" tabindex="-1"><a class="header-anchor" href="#id-标签属性"><span>id 标签属性</span></a></h4><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">el</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">id</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;jj&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="多个节点增加效率写法-文档碎片" tabindex="-1"><a class="header-anchor" href="#多个节点增加效率写法-文档碎片"><span>多个节点增加效率写法-文档碎片</span></a></h2><p>可以理解为一个临时顶级元素，被加入文档时只有其中的成员才会被加入</p><p>举例<br> 非文档碎片的 <strong>低效率写法</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> arrText</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;6&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;7&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;9&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">arrText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> op</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;P&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> oText</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createTextNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">arrText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    op</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">oText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">op</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这段代码运行良好，但问题是它调用了十次document.body.appendChild(),每次要产生一次页面刷新</p><p><strong>文档碎片写法</strong></p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> arrText</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;2&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;3&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;4&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;5&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;6&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;7&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;8&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;9&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;10&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> oFrag</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createDocumentFragment</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">0</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">arrText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> op</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createElement</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;P&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> oText</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createTextNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">arrText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    op</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">oText</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    oFrag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">op</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">body</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">appendChild</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">oFrag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>document.body.appendChild()</code> 仅调用了一次，这意味首只需要进行一次屏幕的刷新。<br> 这里指的刷新：页面的本质发生改变，显示并没任何改变，只有在执行完代码后，显示才会有改变</p><h2 id="文本节点相关" tabindex="-1"><a class="header-anchor" href="#文本节点相关"><span>文本节点相关</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>inserData(offset,string) 指定位置插入</span></span>
<span class="line"><span>appendData(string) 追加</span></span>
<span class="line"><span>deleteData(off,count,string)  删除指定字符</span></span>
<span class="line"><span>splitData(offset) 拆分成两个节点</span></span>
<span class="line"><span>substring(offset,count)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="节点类型-node-nodetype" tabindex="-1"><a class="header-anchor" href="#节点类型-node-nodetype"><span>节点类型 node.nodeType</span></a></h2><table><thead><tr><th>名称</th><th>值</th></tr></thead><tbody><tr><td>元素节点(HTMLElement)</td><td>1</td></tr><tr><td>文本节点(Text)</td><td>3</td></tr><tr><td>注释节点(Comment)</td><td>8</td></tr><tr><td>属性节点(Attr)</td><td>2</td></tr><tr><td>文档节点(document 对象)</td><td>9</td></tr><tr><td>碎片文档节点(DocumentFragment对象)</td><td>11</td></tr></tbody></table><p>兼容性：所有浏览器</p><h2 id="节点名称-node-nodename" tabindex="-1"><a class="header-anchor" href="#节点名称-node-nodename"><span>节点名称 node.nodeName</span></a></h2><table><thead><tr><th>名称</th><th>值</th></tr></thead><tbody><tr><td>元素节点(HTMLElement)</td><td>就是 标签名，但是大写</td></tr><tr><td>文本节点(Text)</td><td>#text</td></tr><tr><td>注释节点(Comment)</td><td>#comment</td></tr><tr><td>属性节点(Attr)</td><td>属性名</td></tr><tr><td>文档节点(document对象)</td><td>#document</td></tr><tr><td>碎片文档节点(DocumentFragment对象)</td><td>#document-fragment</td></tr></tbody></table><h2 id="节点值-node-nodevalue" tabindex="-1"><a class="header-anchor" href="#节点值-node-nodevalue"><span>节点值 node.nodeValue</span></a></h2><p>兼容性：所有浏览器</p><table><thead><tr><th>名称</th><th>值</th></tr></thead><tbody><tr><td>元素节点、文档节点</td><td>永远返回 null</td></tr><tr><td>文本节点、注释节点</td><td>节点之间的文本值，且将去掉两头的 空格符、换行符</td></tr><tr><td>属性节点</td><td>就是属性值。同样，也将去掉两头的 空格符、换行符。而且中间的连续空格符只会保留一个，且不保留换行符号</td></tr></tbody></table><h2 id="对象形式操作-元素属性" tabindex="-1"><a class="header-anchor" href="#对象形式操作-元素属性"><span>对象形式操作 元素属性</span></a></h2><p>当对象 获取到后，就可通过 nodeType、nodeName、nodeValue属性进行操作了</p><ol><li>nodeType：将返回一个Number类型，表明此对象是属性节点。只读</li><li>nodeName：属性名。只读</li><li>nodeValue：属性值。可读写。获取的值特点：将去掉两头的 空格符、换行符。且中间的连续空格符只保留一个，不保留换行符</li></ol><p>兼容性：所有</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" data-title="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 创建 class 属性</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> classAttr</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">createAttribute</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;class&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 设置到元素上</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">setAttributeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">classAttr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 获取</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getAttributeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;class&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">===</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> classAttr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 获取所有</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// ie6 获取到的不只有标签属性 ，还有 元素的js属性</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> attrs</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">attributes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 删除</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 兼容性：ie6 删除src时，有问题。没有 removeAttribute 好</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">elem</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">removeAttributeNode</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">classAttr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,105)]))}const r=s(l,[["render",t],["__file","元素、节点.html.vue"]]),p=JSON.parse('{"path":"/old__/01_js-dom-webapis/%E5%85%83%E7%B4%A0%E3%80%81%E8%8A%82%E7%82%B9.html","title":"","lang":"zh-CN","frontmatter":{"description":"元素对象创建 节点替换(适用元素) 子节点替换 语法 例子 兼容性 节点增加 末尾追加子节点(适用元素) 元素内部增加 insertBefore 元素增加 增加 html 文本 - insertAdjacentHTML 增加元素 - insertAdjacentElement 节点克隆/复制(适用元素) 识别文档中不存在元素 元素标签文本操作 inne...","head":[["meta",{"property":"og:url","content":"http://docs.cqlql.top/old__/01_js-dom-webapis/%E5%85%83%E7%B4%A0%E3%80%81%E8%8A%82%E7%82%B9.html"}],["meta",{"property":"og:site_name","content":"开发笔记"}],["meta",{"property":"og:description","content":"元素对象创建 节点替换(适用元素) 子节点替换 语法 例子 兼容性 节点增加 末尾追加子节点(适用元素) 元素内部增加 insertBefore 元素增加 增加 html 文本 - insertAdjacentHTML 增加元素 - insertAdjacentElement 节点克隆/复制(适用元素) 识别文档中不存在元素 元素标签文本操作 inne..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-28T02:50:25.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-28T02:50:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-10-28T02:50:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"桥黎\\",\\"url\\":\\"\\"}]}"]]},"headers":[{"level":2,"title":"元素对象创建","slug":"元素对象创建","link":"#元素对象创建","children":[]},{"level":2,"title":"节点替换(适用元素)","slug":"节点替换-适用元素","link":"#节点替换-适用元素","children":[{"level":3,"title":"子节点替换","slug":"子节点替换","link":"#子节点替换","children":[]}]},{"level":2,"title":"节点增加","slug":"节点增加","link":"#节点增加","children":[{"level":3,"title":"末尾追加子节点(适用元素)","slug":"末尾追加子节点-适用元素","link":"#末尾追加子节点-适用元素","children":[]},{"level":3,"title":"元素内部增加 insertBefore","slug":"元素内部增加-insertbefore","link":"#元素内部增加-insertbefore","children":[]}]},{"level":2,"title":"元素增加","slug":"元素增加","link":"#元素增加","children":[{"level":3,"title":"增加 html 文本 - insertAdjacentHTML","slug":"增加-html-文本-insertadjacenthtml","link":"#增加-html-文本-insertadjacenthtml","children":[]},{"level":3,"title":"增加元素 - insertAdjacentElement","slug":"增加元素-insertadjacentelement","link":"#增加元素-insertadjacentelement","children":[]}]},{"level":2,"title":"节点克隆/复制(适用元素)","slug":"节点克隆-复制-适用元素","link":"#节点克隆-复制-适用元素","children":[]},{"level":2,"title":"识别文档中不存在元素","slug":"识别文档中不存在元素","link":"#识别文档中不存在元素","children":[]},{"level":2,"title":"元素标签文本操作","slug":"元素标签文本操作","link":"#元素标签文本操作","children":[{"level":3,"title":"innerText","slug":"innertext","link":"#innertext","children":[]},{"level":3,"title":"textContent","slug":"textcontent","link":"#textcontent","children":[]},{"level":3,"title":"innerHTML","slug":"innerhtml","link":"#innerhtml","children":[]},{"level":3,"title":"outerHTML","slug":"outerhtml","link":"#outerhtml","children":[]},{"level":3,"title":"textContent 与 innerText 区别","slug":"textcontent-与-innertext-区别","link":"#textcontent-与-innertext-区别","children":[]},{"level":3,"title":"总结","slug":"总结","link":"#总结","children":[]}]},{"level":2,"title":"元素标签属性操作","slug":"元素标签属性操作","link":"#元素标签属性操作","children":[{"level":3,"title":"通用全能操作","slug":"通用全能操作","link":"#通用全能操作","children":[]},{"level":3,"title":"部分直接 js 操作","slug":"部分直接-js-操作","link":"#部分直接-js-操作","children":[]}]},{"level":2,"title":"多个节点增加效率写法-文档碎片","slug":"多个节点增加效率写法-文档碎片","link":"#多个节点增加效率写法-文档碎片","children":[]},{"level":2,"title":"文本节点相关","slug":"文本节点相关","link":"#文本节点相关","children":[]},{"level":2,"title":"节点类型 node.nodeType","slug":"节点类型-node-nodetype","link":"#节点类型-node-nodetype","children":[]},{"level":2,"title":"节点名称 node.nodeName","slug":"节点名称-node-nodename","link":"#节点名称-node-nodename","children":[]},{"level":2,"title":"节点值 node.nodeValue","slug":"节点值-node-nodevalue","link":"#节点值-node-nodevalue","children":[]},{"level":2,"title":"对象形式操作 元素属性","slug":"对象形式操作-元素属性","link":"#对象形式操作-元素属性","children":[]}],"git":{"createdTime":1652927496000,"updatedTime":1730083825000,"contributors":[{"name":"陈桥黎","email":"cql.ql@qq.com","commits":1}]},"readingTime":{"minutes":8.43,"words":2528},"filePathRelative":"__old__/01_js-dom-webapis/元素、节点.md","localizedDate":"2022年5月19日","autoDesc":true,"excerpt":"<ul>\\n<li><a href=\\"#%E5%85%83%E7%B4%A0%E5%AF%B9%E8%B1%A1%E5%88%9B%E5%BB%BA\\">元素对象创建</a></li>\\n<li><a href=\\"#%E8%8A%82%E7%82%B9%E6%9B%BF%E6%8D%A2%E9%80%82%E7%94%A8%E5%85%83%E7%B4%A0\\">节点替换(适用元素)</a>\\n<ul>\\n<li><a href=\\"#%E5%AD%90%E8%8A%82%E7%82%B9%E6%9B%BF%E6%8D%A2\\">子节点替换</a>\\n<ul>\\n<li><a href=\\"#%E8%AF%AD%E6%B3%95\\">语法</a></li>\\n<li><a href=\\"#%E4%BE%8B%E5%AD%90\\">例子</a></li>\\n<li><a href=\\"#%E5%85%BC%E5%AE%B9%E6%80%A7\\">兼容性</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E8%8A%82%E7%82%B9%E5%A2%9E%E5%8A%A0\\">节点增加</a>\\n<ul>\\n<li><a href=\\"#%E6%9C%AB%E5%B0%BE%E8%BF%BD%E5%8A%A0%E5%AD%90%E8%8A%82%E7%82%B9%E9%80%82%E7%94%A8%E5%85%83%E7%B4%A0\\">末尾追加子节点(适用元素)</a></li>\\n<li><a href=\\"#%E5%85%83%E7%B4%A0%E5%86%85%E9%83%A8%E5%A2%9E%E5%8A%A0-insertbefore\\">元素内部增加 insertBefore</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%85%83%E7%B4%A0%E5%A2%9E%E5%8A%A0\\">元素增加</a>\\n<ul>\\n<li><a href=\\"#%E5%A2%9E%E5%8A%A0-html-%E6%96%87%E6%9C%AC---insertadjacenthtml\\">增加 html 文本 - insertAdjacentHTML</a></li>\\n<li><a href=\\"#%E5%A2%9E%E5%8A%A0%E5%85%83%E7%B4%A0---insertadjacentelement\\">增加元素 - insertAdjacentElement</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E8%8A%82%E7%82%B9%E5%85%8B%E9%9A%86%E5%A4%8D%E5%88%B6%E9%80%82%E7%94%A8%E5%85%83%E7%B4%A0\\">节点克隆/复制(适用元素)</a></li>\\n<li><a href=\\"#%E8%AF%86%E5%88%AB%E6%96%87%E6%A1%A3%E4%B8%AD%E4%B8%8D%E5%AD%98%E5%9C%A8%E5%85%83%E7%B4%A0\\">识别文档中不存在元素</a></li>\\n<li><a href=\\"#%E5%85%83%E7%B4%A0%E6%A0%87%E7%AD%BE%E6%96%87%E6%9C%AC%E6%93%8D%E4%BD%9C\\">元素标签文本操作</a>\\n<ul>\\n<li><a href=\\"#innertext\\">innerText</a></li>\\n<li><a href=\\"#textcontent\\">textContent</a></li>\\n<li><a href=\\"#innerhtml\\">innerHTML</a></li>\\n<li><a href=\\"#outerhtml\\">outerHTML</a></li>\\n<li><a href=\\"#textcontent-%E4%B8%8E-innertext-%E5%8C%BA%E5%88%AB\\">textContent 与 innerText 区别</a></li>\\n<li><a href=\\"#%E6%80%BB%E7%BB%93\\">总结</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%85%83%E7%B4%A0%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7%E6%93%8D%E4%BD%9C\\">元素标签属性操作</a>\\n<ul>\\n<li><a href=\\"#%E9%80%9A%E7%94%A8%E5%85%A8%E8%83%BD%E6%93%8D%E4%BD%9C\\">通用全能操作</a></li>\\n<li><a href=\\"#%E9%83%A8%E5%88%86%E7%9B%B4%E6%8E%A5-js-%E6%93%8D%E4%BD%9C\\">部分直接 js 操作</a>\\n<ul>\\n<li><a href=\\"#name-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7----%E8%A1%A8%E5%8D%95%E5%85%83%E7%B4%A0%E7%8B%AC%E6%9C%89\\">name 标签属性 -- 表单元素独有</a></li>\\n<li><a href=\\"#class-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7----%E9%80%9A%E8%BF%87-classname-%E8%AF%BB%E5%86%99\\">class 标签属性 -- 通过 className 读写</a></li>\\n<li><a href=\\"#id-%E6%A0%87%E7%AD%BE%E5%B1%9E%E6%80%A7\\">id 标签属性</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#%E5%A4%9A%E4%B8%AA%E8%8A%82%E7%82%B9%E5%A2%9E%E5%8A%A0%E6%95%88%E7%8E%87%E5%86%99%E6%B3%95-%E6%96%87%E6%A1%A3%E7%A2%8E%E7%89%87\\">多个节点增加效率写法-文档碎片</a></li>\\n</ul>"}');export{r as comp,p as data};
