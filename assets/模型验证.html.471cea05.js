import{_ as e}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as p,a as o,b as n,e as a,c as t,f as c,r as l}from"./app.7d9cbd82.js";const i={},u=c(`<h2 id="\u57FA\u672C\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u4F7F\u7528" aria-hidden="true">#</a> \u57FA\u672C\u4F7F\u7528</h2><p>\u5047\u5982\u6570\u636E\u7ED3\u6784\u4E0D\u7B26\u5408\u6A21\u578B\u6CE8\u89E3\u8981\u6C42\uFF0C\u5C06\u4F1A\u62A5\u9519</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>DataAnnotations</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">UserManage</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u767B\u5F55\u53C2\u6570</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginView</span>
<span class="token punctuation">{</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// \u8D26\u53F7</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token punctuation">[</span><span class="token function">Required</span><span class="token punctuation">(</span>ErrorMessage <span class="token operator">=</span> <span class="token string">&quot;\u8D26\u53F7\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> userName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// \u5BC6\u7801</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token punctuation">[</span><span class="token function">Required</span><span class="token punctuation">(</span>ErrorMessage <span class="token operator">=</span> <span class="token string">&quot;\u5BC6\u7801\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> password <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5B9A\u4E49\u6A21\u578B\u9A8C\u8BC1" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u6A21\u578B\u9A8C\u8BC1" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u6A21\u578B\u9A8C\u8BC1</h2><p>\u521B\u5EFA\u4E00\u4E2A\u7EE7\u627F\u81EA ValidationAttribute \u7684\u81EA\u5B9A\u4E49\u9A8C\u8BC1\u7279\u6027\u7C7B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>DataAnnotations</span><span class="token punctuation">;</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomValidationAttribute</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ValidationAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">protected</span> <span class="token keyword">override</span> <span class="token return-type class-name">ValidationResult</span> <span class="token function">IsValid</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">string</span></span> <span class="token keyword">value</span><span class="token punctuation">,</span> <span class="token class-name">ValidationContext</span> validationContext<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// \u9A8C\u8BC1\u903B\u8F91</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">value</span> <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ValidationResult</span><span class="token punctuation">(</span>ErrorMessage<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ValidationResult<span class="token punctuation">.</span>Success<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LoginView.cs \u4E2D\u4F7F\u7528</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">System<span class="token punctuation">.</span>ComponentModel<span class="token punctuation">.</span>DataAnnotations</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">UserManage</span><span class="token punctuation">;</span>

<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">LoginView</span>
<span class="token punctuation">{</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token doc-comment comment">/// \u8D26\u53F7</span>
  <span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
  <span class="token punctuation">[</span><span class="token function">CustomValidation</span><span class="token punctuation">(</span>ErrorMessage <span class="token operator">=</span> <span class="token string">&quot;\u8D26\u53F7\u4E0D\u80FD\u4E3A\u7A7A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
  <span class="token keyword">public</span> <span class="token return-type class-name"><span class="token keyword">string</span><span class="token punctuation">?</span></span> userName <span class="token punctuation">{</span> <span class="token keyword">get</span><span class="token punctuation">;</span> <span class="token keyword">set</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>

<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u81EA\u5B9A\u4E49\u9519\u8BEF\u6D88\u606F" tabindex="-1"><a class="header-anchor" href="#\u81EA\u5B9A\u4E49\u9519\u8BEF\u6D88\u606F" aria-hidden="true">#</a> \u81EA\u5B9A\u4E49\u9519\u8BEF\u6D88\u606F</h2><p>\u7531\u4E8E\u9700\u8981\u7EDF\u4E00\u9519\u8BEF\u6D88\u606F\u683C\u5F0F\uFF0C\u65B9\u4FBF\u524D\u7AEF\u7EDF\u4E00\u5904\u7406\uFF0C\u6240\u4EE5\u9700\u8981\u4FEE\u6539\u9ED8\u8BA4\u63D0\u4F9B\u7684\u6D88\u606F\u7ED3\u6784\u3002</p><p>\u4F7F\u7528 Filter \u5B9E\u73B0\uFF0C\u7EE7\u627F ResultFilterAttribute \u7C7B\u3002</p><p>\u4E0B\u9762\u521B\u5EFA\u4E00\u4E2A RequiredError \u8FC7\u6EE4\u5668\u7C7B</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code><span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Mvc</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Microsoft<span class="token punctuation">.</span>AspNetCore<span class="token punctuation">.</span>Mvc<span class="token punctuation">.</span>Filters</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">NetCommon<span class="token punctuation">.</span>WebApi<span class="token punctuation">.</span>UserManage<span class="token punctuation">.</span>Models<span class="token punctuation">.</span>ViewModels</span><span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token namespace">Newtonsoft<span class="token punctuation">.</span>Json</span><span class="token punctuation">;</span>

<span class="token keyword">namespace</span> <span class="token namespace">NetCommon<span class="token punctuation">.</span>WebApi<span class="token punctuation">.</span>UserManage<span class="token punctuation">.</span>Filter</span><span class="token punctuation">;</span>

<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token doc-comment comment">/// \u8BF7\u6C42\u9A8C\u8BC1\u9519\u8BEF\u5904\u7406</span>
<span class="token doc-comment comment">/// <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>summary</span><span class="token punctuation">&gt;</span></span></span>
<span class="token punctuation">[</span><span class="token function">AttributeUsage</span><span class="token punctuation">(</span>AttributeTargets<span class="token punctuation">.</span>Class <span class="token operator">|</span> AttributeTargets<span class="token punctuation">.</span>Method<span class="token punctuation">,</span> Inherited <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">]</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">RequiredError</span> <span class="token punctuation">:</span> <span class="token type-list"><span class="token class-name">ResultFilterAttribute</span></span>
<span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">override</span> <span class="token return-type class-name"><span class="token keyword">void</span></span> <span class="token function">OnResultExecuting</span><span class="token punctuation">(</span><span class="token class-name">ResultExecutingContext</span> actionContext<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">//base.OnResultExecuting(actionContext);</span>
        <span class="token class-name"><span class="token keyword">var</span></span> modelState <span class="token operator">=</span> actionContext<span class="token punctuation">.</span>ModelState<span class="token punctuation">;</span>
        <span class="token class-name">List<span class="token punctuation">&lt;</span>ErrorView<span class="token punctuation">&gt;</span></span> errors <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">List<span class="token punctuation">&lt;</span>ErrorView<span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>modelState<span class="token punctuation">.</span>IsValid<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token class-name"><span class="token keyword">var</span></span> baseResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">APIResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                code <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>
                msg <span class="token operator">=</span> <span class="token string">&quot;\u8BF7\u63D0\u4EA4\u6B63\u786E\u7684\u53C2\u6570&quot;</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">var</span></span> key <span class="token keyword">in</span> modelState<span class="token punctuation">.</span>Keys<span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                <span class="token class-name"><span class="token keyword">var</span></span> state <span class="token operator">=</span> modelState<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">.</span>Errors<span class="token punctuation">.</span><span class="token function">Any</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">{</span>
                    <span class="token class-name">ErrorView</span> errorView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ErrorView</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    errorView<span class="token punctuation">.</span>ErrorName <span class="token operator">=</span> key<span class="token punctuation">;</span>
                    errorView<span class="token punctuation">.</span>Error <span class="token operator">=</span> state<span class="token punctuation">.</span>Errors<span class="token punctuation">.</span><span class="token function">First</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>ErrorMessage<span class="token punctuation">;</span>
                    errors<span class="token punctuation">.</span><span class="token function">Add</span><span class="token punctuation">(</span>errorView<span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token comment">// baseResult.msg += errorView.ErrorName + &quot;-&quot; + errorView.Error;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
            baseResult<span class="token punctuation">.</span>data <span class="token operator">=</span> errors<span class="token punctuation">;</span>
            actionContext<span class="token punctuation">.</span>Result <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">ContentResult</span>
            <span class="token punctuation">{</span>
                Content <span class="token operator">=</span> JsonConvert<span class="token punctuation">.</span><span class="token function">SerializeObject</span><span class="token punctuation">(</span>baseResult<span class="token punctuation">)</span><span class="token punctuation">,</span>
                ContentType <span class="token operator">=</span> <span class="token string">&quot;application/json&quot;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728 Startup.cs \u4E2D\u6CE8\u518C\u8FC7\u6EE4\u5668</p><div class="language-csharp ext-cs line-numbers-mode"><pre class="language-csharp"><code>builder<span class="token punctuation">.</span>Services<span class="token punctuation">.</span><span class="token function">AddControllers</span><span class="token punctuation">(</span>options <span class="token operator">=&gt;</span>
<span class="token punctuation">{</span>
    options<span class="token punctuation">.</span>Filters<span class="token punctuation">.</span><span class="token generic-method"><span class="token function">Add</span><span class="token generic class-name"><span class="token punctuation">&lt;</span>RequiredErrorForClent<span class="token punctuation">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u53C2\u8003\u6587\u6863" tabindex="-1"><a class="header-anchor" href="#\u53C2\u8003\u6587\u6863" aria-hidden="true">#</a> \u53C2\u8003\u6587\u6863</h2>`,16),r={href:"https://learn.microsoft.com/zh-cn/aspnet/web-api/overview/formats-and-model-binding/model-validation-in-aspnet-web-api",target:"_blank",rel:"noopener noreferrer"},k={href:"https://learn.microsoft.com/zh-cn/aspnet/mvc/overview/older-versions/mvc-music-store/mvc-music-store-part-6?source=recommendations",target:"_blank",rel:"noopener noreferrer"},d={href:"https://learn.microsoft.com/zh-cn/aspnet/mvc/overview/older-versions-1/models-data/validation-with-the-data-annotation-validators-cs",target:"_blank",rel:"noopener noreferrer"},m={href:"https://learn.microsoft.com/zh-cn/aspnet/core/mvc/models/validation?source=recommendations&view=aspnetcore-7.0",target:"_blank",rel:"noopener noreferrer"};function v(b,g){const s=l("ExternalLinkIcon");return p(),o("div",null,[u,n("p",null,[n("a",r,[a("ASP.NET Web API \u4E2D\u7684\u6A21\u578B\u9A8C\u8BC1 - ASP.NET 4.x"),t(s)])]),n("p",null,[n("a",k,[a("\u7B2C 6 \u90E8\u5206\uFF1A\u4F7F\u7528\u6570\u636E\u6CE8\u91CA\u8FDB\u884C\u6A21\u578B\u9A8C\u8BC1 "),t(s)])]),n("p",null,[n("a",d,[a("\u4F7F\u7528\u6570\u636E\u6CE8\u91CA\u9A8C\u8BC1\u7A0B\u5E8F (C#)"),t(s)])]),n("p",null,[n("a",m,[a("ASP.NET Core MVC \u4E2D\u7684\u6A21\u578B\u9A8C\u8BC1"),t(s)])])])}const h=e(i,[["render",v],["__file","\u6A21\u578B\u9A8C\u8BC1.html.vue"]]);export{h as default};
